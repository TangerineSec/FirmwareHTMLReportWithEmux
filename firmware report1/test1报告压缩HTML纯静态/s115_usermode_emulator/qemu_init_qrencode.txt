
-----------------------------------------------------------------

[[0;33m*[0m] Initial CPU detection process of binary [0;33mqrencode[0m with CPU configuration [0;33mNONE[0m.

[[0;33m*[0m] Emulator used: [0;33mqemu-mipsel-static[0m
[[0;33m*[0m] Using root directory: [0;33m/logs/s115_usermode_emulator/firmware/squashfs-root[0m ([0;33m1/2[0m)

[[0;33m*[0m] Trying to emulate binary [0;33m./usr/local/xcloud/bin/qrencode[0m with cpu config [0;33mNONE[0m

1  = 0x2b2c5000
1 stat("/etc/ld.so.cache",0x2b1ae680) = -1 errno=2 (No such file or directory)
1 open("/lib/libpng12.so.0",O_RDONLY) = -1 errno=2 (No such file or directory)
1 open("/usr/lib/libpng12.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1adce0) = 0
1  = 0x2b2c6000
1 read(3,0x2b2c6000,4096) = 4096
1  = 0x2b2c7000
1  = 0x2b2c7000
1  = 0x2b2fd000
1 close(3) = 0
1 munmap(0x2b2c6000,4096) = 0
1 open("/lib/libz.so.1",O_RDONLY) = 3
1 fstat(3,0x2b1adcd0) = 0
1  = 0x2b2c6000
1 read(3,0x2b2c6000,4096) = 4096
1  = 0x2b2fe000
1  = 0x2b2fe000
1  = 0x2b323000
1 close(3) = 0
1 munmap(0x2b2c6000,4096) = 0
1 open("/lib/libm.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1adcc0) = 0
1  = 0x2b2c6000
1 read(3,0x2b2c6000,4096) = 4096
1  = 0x2b324000
1  = 0x2b324000
1  = 0x2b348000
1 close(3) = 0
1 munmap(0x2b2c6000,4096) = 0
1 open("/lib/libgcc_s.so.1",O_RDONLY) = 3
1 fstat(3,0x2b1adcb0) = 0
1  = 0x2b2c6000
1 read(3,0x2b2c6000,4096) = 4096
1  = 0x2b349000
1  = 0x2b349000
1  = 0x2b36b000
1 close(3) = 0
1 munmap(0x2b2c6000,4096) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1adca0) = 0
1  = 0x2b2c6000
1 read(3,0x2b2c6000,4096) = 4096
1  = 0x2b36c000
1  = 0x2b36c000
1  = 0x2b3d2000
1  = 0x2b3d4000
1 close(3) = 0
1 munmap(0x2b2c6000,4096) = 0
1 open("/lib/libz.so.1",O_RDONLY) = 3
1 fstat(3,0x2b1adc90) = 0
1 close(3) = 0
1 open("/lib/libm.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1adc80) = 0
1 close(3) = 0
1 open("/lib/libgcc_s.so.1",O_RDONLY) = 3
1 fstat(3,0x2b1adc70) = 0
1 close(3) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1adc60) = 0
1 close(3) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1adc50) = 0
1 close(3) = 0
1 open("/lib/libgcc_s.so.1",O_RDONLY) = 3
1 fstat(3,0x2b1adc40) = 0
1 close(3) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1adc30) = 0
1 close(3) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1adc20) = 0
1 close(3) = 0
1 stat("/lib/ld-uClibc.so.0",0x2b1ae5b0) = 0
1  = 0x2b2c6000
1 set_thread_area(0x2b2cd440) = 0
1 mprotect(0x2b3d2000,4096,PROT_READ) = 0
1 mprotect(0x2b2c2000,4096,PROT_READ) = 0
1 ioctl(0,TCGETS,0x2b1ae5a0) = -1 errno=25 (Inappropriate ioctl for device)
1 ioctl(1,TCGETS,0x2b1ae5a0) = -1 errno=25 (Inappropriate ioctl for device)
1 write(2,0x40a458,17)qrencode version  = 17
1 write(2,0x40be14,5)3.4.2 = 5
1 write(2,0x40a46b,41)
Copyright (C) 2006-2012 Kentaro Fukuchi
 = 41
1 write(2,0x40ad3c,1836)Usage: qrencode [OPTION]... [STRING]
Encode input data in a QR Code and save as a PNG or EPS image.

  -h           display this message.
  --help       display the usage of long options.
  -o FILENAME  write image to FILENAME. If '-' is specified, the result
               will be output to standard output. If -S is given, structured
               symbols are written to FILENAME-01.png, FILENAME-02.png, ...
               (suffix is removed from FILENAME, if specified)
  -s NUMBER    specify module size in dots (pixels). (default=3)
  -l {LMQH}    specify error correction level from L (lowest) to H (highest).
               (default=L)
  -v NUMBER    specify the version of the symbol. (default=auto)
  -m NUMBER    specify the width of the margins. (default=4 (2 for Micro))
  -d NUMBER    specify the DPI of the generated PNG. (default=72)
  -t {PNG,EPS,SVG,ANSI,ANSI256,ASCII,ASCIIi,UTF8,ANSIUTF8}
               specify the type of the generated image. (default=PNG)
  -S           make structured symbols. Version must be specified.
  -k           assume that the input text contains kanji (shift-jis).
  -c           encode lower-case alphabet characters in 8-bit mode. (default)
  -i           ignore case distinctions and use only upper-case characters.
  -8           encode entire data in 8-bit mode. -k, -c and -i will be ignored.
  -M           encode in a Micro QR Code.
  --foreground=RRGGBB[AA]
  --background=RRGGBB[AA]
               specify foreground/background color in hexadecimal notation.
               6-digit (RGB) or 8-digit (RGBA) form are supported.
               Color output support available only in PNG and SVG.
  -V           display the version number and copyrights of the qrencode.
  [STRING]     input data. If it is not specified, data will be taken from
               standard input.
 = 1836
1 exit_group(0)
[[0;32m+[0m][0;32m CPU configuration used for [0;33mqrencode[0;32m: [0;33mNONE[0;32m[0m
CPU_CONFIG_det\;NONE

-----------------------------------------------------------------


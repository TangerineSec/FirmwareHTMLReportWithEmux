1  = 0x2b2c5000
1 stat("/etc/ld.so.cache",0x2b1ae6f0) = -1 errno=2 (No such file or directory)
1 open("/lib/libgcc_s.so.1",O_RDONLY) = 3
1 fstat(3,0x2b1add50) = 0
1  = 0x2b2c6000
1 read(3,0x2b2c6000,4096) = 4096
1  = 0x2b2c7000
1  = 0x2b2c7000
1  = 0x2b2e9000
1 close(3) = 0
1 munmap(0x2b2c6000,4096) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1add40) = 0
1  = 0x2b2c6000
1 read(3,0x2b2c6000,4096) = 4096
1  = 0x2b2ea000
1  = 0x2b2ea000
1  = 0x2b350000
1  = 0x2b352000
1 close(3) = 0
1 munmap(0x2b2c6000,4096) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x2b1add30) = 0
1 close(3) = 0
1 stat("/lib/ld-uClibc.so.0",0x2b1ae6c0) = 0
1  = 0x2b2c6000
1 set_thread_area(0x2b2cd440) = 0
1 mprotect(0x2b350000,4096,PROT_READ) = 0
1 mprotect(0x2b2c2000,4096,PROT_READ) = 0
1 ioctl(0,TCGETS,0x2b1ae6b0) = -1 errno=25 (Inappropriate ioctl for device)
1 ioctl(1,TCGETS,0x2b1ae6b0) = -1 errno=25 (Inappropriate ioctl for device)
1 write(1,0x2b354000,495)syntax: reg [method(r/w/s/d/f)] [offset(Hex)] [value(hex, w only)]
read example : reg r 18
write example : reg w 18 12345678
dump example : reg d 18 
dump example [FPGA emulation]: reg f 18 
modify example : reg m [Offset:Hex] [Data:Hex] [StartBit:Decimal] [DataLen:Decimal] 
To use system register: reg s 0
To use wireless register: reg s 1
To use other base address offset: reg s [offset]
for example: reg s 0xa0500000
for example: reg m c8 1 31 1
To show current base address offset: reg s 2
 = 495
1 exit_group(0)

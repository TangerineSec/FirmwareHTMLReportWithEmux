
[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 7:[0m
[0mcur_line=`printf "%sp" "$num"`[0m
[32m         ^-------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
cur_line=$(printf "%sp" "$num")


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 9:[0m
[0mwhile [ "null" = "null" ]; do[0m
[33m               ^-- SC2050 (warning): This expression is constant. Did you forget the $ on a variable?[0m


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 10:[0m
[0mline=`sed -n $cur_line $dev_usb_state_file`[0m
[32m     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
line=$(sed -n "$cur_line" $dev_usb_state_file)


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 12:[0m
[0m		let num=$num+1[0m
[33m                ^------------^ SC3039 (warning): In POSIX sh, 'let' is undefined.[0m


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 13:[0m
[0m		cur_line=`printf "%sp" "$num"`[0m
[32m                         ^-------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
		cur_line=$(printf "%sp" "$num")


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 15:[0m
[0m		manufact=`echo $line | awk '{print $1}'`[0m
[32m                         ^-----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                               ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		manufact=$(echo "$line" | awk '{print $1}')


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 17:[0m
[0m		if [ -z $manufact ]; then[0m
[32m                        ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		if [ -z "$manufact" ]; then


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 22:[0m
[0m		sdxx=`echo $line | awk '{print $2}'`[0m
[32m                     ^-----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                           ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		sdxx=$(echo "$line" | awk '{print $2}')


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 23:[0m
[0m		sd_size=`echo $line | awk '{print $3}'`[0m
[32m                        ^-----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                              ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		sd_size=$(echo "$line" | awk '{print $3}')


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 24:[0m
[0m		org_data=`echo $line | awk '{print $4}'`[0m
[32m                         ^-----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                               ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		org_data=$(echo "$line" | awk '{print $4}')


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 25:[0m
[0m		mount_state=`echo $line | awk '{print $5}'`[0m
[32m                            ^-----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		mount_state=$(echo "$line" | awk '{print $5}')


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 40:[0m
[0m		if [ ! -z "$manufact" ] ;then[0m
[32m                     ^-- SC2236 (style): Use -n instead of ! -z.[0m


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 42:[0m
[0m			if [ ! -z "$mount_state" ] ;then[0m
[32m                             ^-- SC2236 (style): Use -n instead of ! -z.[0m


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 43:[0m
[0m				ret_info=`printf "%s///%s///%s///%s///%s/////" "$manufact" "$sdxx" "$sd_size" "$org_data" "$mount_state"`[0m
[32m                                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
				ret_info=$(printf "%s///%s///%s///%s///%s/////" "$manufact" "$sdxx" "$sd_size" "$org_data" "$mount_state")


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 44:[0m
[0m		   		echo $ret_info[0m
[32m                                     ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		   		echo "$ret_info"


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 46:[0m
[0m				ret_info=`printf "%s///%s///%s///%s///%s" "$manufact" "$sdxx" "$sd_size" "$org_data" "Unmounted"`[0m
[32m                                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
				ret_info=$(printf "%s///%s///%s///%s///%s" "$manufact" "$sdxx" "$sd_size" "$org_data" "Unmounted")


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 47:[0m
[0m		   		echo $ret_info[0m
[32m                                     ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		   		echo "$ret_info"


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 61:[0m
[0m	cur_line=`printf "%sp" "$num"`[0m
[32m                 ^-------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
	cur_line=$(printf "%sp" "$num")


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 63:[0m
[0m	while [ "null" = "null" ]; do[0m
[33m                       ^-- SC2050 (warning): This expression is constant. Did you forget the $ on a variable?[0m


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 64:[0m
[0m	line=`sed -n $cur_line $dev_usb_state_file`[0m
[32m             ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                     ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	line=$(sed -n "$cur_line" $dev_usb_state_file)


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 66:[0m
[0m	let num=$num+1[0m
[33m        ^------------^ SC3039 (warning): In POSIX sh, 'let' is undefined.[0m


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 67:[0m
[0m	cur_line=`printf "%sp" "$num"`[0m
[32m                 ^-------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
	cur_line=$(printf "%sp" "$num")


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 70:[0m
[0m	manufact=`echo $line | awk '{print $1}'`[0m
[32m                 ^-----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                       ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	manufact=$(echo "$line" | awk '{print $1}')


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 72:[0m
[0m		if [ -z $manufact ]; then[0m
[32m                        ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
		if [ -z "$manufact" ]; then


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 75:[0m
[0m	mount_state=`echo $line | awk '{print $5}'`[0m
[32m                    ^-----------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[32m                          ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	mount_state=$(echo "$line" | awk '{print $5}')


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 79:[0m
[0m		    let total_num1=$total_num1+1[0m
[33m                    ^--------------------------^ SC3039 (warning): In POSIX sh, 'let' is undefined.[0m


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 94:[0m
[0m	OptMount=`cat $USB_MNT_TMP |  awk '{print $1}' | grep $DevName 2>/dev/null`[0m
[32m                 ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
	OptMount=$(cat $USB_MNT_TMP |  awk '{print $1}' | grep $DevName 2>/dev/null)


[1mIn /logs/firmware/squashfs-root/usr/local/localshell/usbdevice line 96:[0m
[0m	if [ -z $OptMount ] ;then[0m
[32m                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
	if [ -z "$OptMount" ] ;then

For more information:
  https://www.shellcheck.net/wiki/SC2050 -- This expression is constant. Did ...
  https://www.shellcheck.net/wiki/SC3039 -- In POSIX sh, 'let' is undefined.
  https://www.shellcheck.net/wiki/SC2086 -- Double quote to prevent globbing ...

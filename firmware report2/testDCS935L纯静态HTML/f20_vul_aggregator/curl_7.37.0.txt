CVE-2014-3613:5.0:NA:cURL\ and\ libcurl\ before\ 7.38.0\ does\ not\ properly\ handle\ IP\ addresses\ in\ cookie\ domain\ names\,\ which\ allows\ remote\ attackers\ to\ set\ cookies\ for\ or\ send\ arbitrary\ cookies\ to\ certain\ sites\,\ as\ demonstrated\ by\ a\ site\ at\ 192.168.0.1\ setting\ cookies\ for\ a\ site\ at\ 127.168.0.1.
CVE-2014-3620:5.0:NA:cURL\ and\ libcurl\ before\ 7.38.0\ allow\ remote\ attackers\ to\ bypass\ the\ Same\ Origin\ Policy\ and\ set\ cookies\ for\ arbitrary\ sites\ by\ setting\ a\ cookie\ for\ a\ top-level\ domain.
CVE-2015-3144:9.0:NA:The\ fix_hostname\ function\ in\ cURL\ and\ libcurl\ 7.37.0\ through\ 7.41.0\ does\ not\ properly\ calculate\ an\ index\,\ which\ allows\ remote\ attackers\ to\ cause\ a\ denial\ of\ service\ \(out-of-bounds\ read\ or\ write\ and\ crash\)\ or\ possibly\ have\ other\ unspecified\ impact\ via\ a\ zero-length\ host\ name\,\ as\ demonstrated\ by\ \"http://:80\"\ and\ \":80.\"
CVE-2015-3148:5.0:NA:cURL\ and\ libcurl\ 7.10.6\ through\ 7.41.0\ do\ not\ properly\ re-use\ authenticated\ Negotiate\ connections\,\ which\ allows\ remote\ attackers\ to\ connect\ as\ other\ users\ via\ a\ request.
CVE-2015-3145:7.5:NA:The\ sanitize_cookie_path\ function\ in\ cURL\ and\ libcurl\ 7.31.0\ through\ 7.41.0\ does\ not\ properly\ calculate\ an\ index\,\ which\ allows\ remote\ attackers\ to\ cause\ a\ denial\ of\ service\ \(out-of-bounds\ write\ and\ crash\)\ or\ possibly\ have\ other\ unspecified\ impact\ via\ a\ cookie\ path\ containing\ only\ a\ double-quote\ character.
CVE-2015-3153:5.0:NA:The\ default\ configuration\ for\ cURL\ and\ libcurl\ before\ 7.42.1\ sends\ custom\ HTTP\ headers\ to\ both\ the\ proxy\ and\ destination\ server\,\ which\ might\ allow\ remote\ proxy\ servers\ to\ obtain\ sensitive\ information\ by\ reading\ the\ header\ contents.
CVE-2016-0754:5.0:NA:cURL\ before\ 7.47.0\ on\ Windows\ allows\ attackers\ to\ write\ to\ arbitrary\ files\ in\ the\ current\ working\ directory\ on\ a\ different\ drive\ via\ a\ colon\ in\ a\ remote\ file\ name.
CVE-2016-0755:5.0:NA:The\ ConnectionExists\ function\ in\ lib/url.c\ in\ libcurl\ before\ 7.47.0\ does\ not\ properly\ re-use\ NTLM-authenticated\ proxy\ connections\,\ which\ might\ allow\ remote\ attackers\ to\ authenticate\ as\ other\ users\ via\ a\ request\,\ a\ similar\ issue\ to\ CVE-2014-0015.
CVE-2016-4606:7.5:9.8:Curl\ before\ 7.49.1\ in\ Apple\ OS\ X\ before\ macOS\ Sierra\ prior\ to\ 10.12\ allows\ remote\ or\ local\ attackers\ to\ execute\ arbitrary\ code\,\ gain\ sensitive\ information\,\ cause\ denial-of-service\ conditions\,\ bypass\ security\ restrictions\,\ and\ perform\ unauthorized\ actions.\ This\ may\ aid\ in\ other\ attacks.
CVE-2016-4802:6.9:NA:Multiple\ untrusted\ search\ path\ vulnerabilities\ in\ cURL\ and\ libcurl\ before\ 7.49.1\,\ when\ built\ with\ SSPI\ or\ telnet\ is\ enabled\,\ allow\ local\ users\ to\ execute\ arbitrary\ code\ and\ conduct\ DLL\ hijacking\ attacks\ via\ a\ Trojan\ horse\ \(1\)\ security.dll\,\ \(2\)\ secur32.dll\,\ or\ \(3\)\ ws2_32.dll\ in\ the\ application\ or\ current\ working\ directory.
CVE-2016-8615:5.0:NA:A\ flaw\ was\ found\ in\ curl\ before\ version\ 7.51.\ If\ cookie\ state\ is\ written\ into\ a\ cookie\ jar\ file\ that\ is\ later\ read\ back\ and\ used\ for\ subsequent\ requests\,\ a\ malicious\ HTTP\ server\ can\ inject\ new\ cookies\ for\ arbitrary\ domains\ into\ said\ cookie\ jar.
CVE-2016-8618:7.5:NA:The\ libcurl\ API\ function\ called\ \`curl_maprintf\(\)\`\ before\ version\ 7.51.0\ can\ be\ tricked\ into\ doing\ a\ double-free\ due\ to\ an\ unsafe\ \`size_t\`\ multiplication\,\ on\ systems\ using\ 32\ bit\ \`size_t\`\ variables.
CVE-2016-8617:4.4:NA:The\ base64\ encode\ function\ in\ curl\ before\ version\ 7.51.0\ is\ prone\ to\ a\ buffer\ being\ under\ allocated\ in\ 32bit\ systems\ if\ it\ receives\ at\ least\ 1Gb\ as\ input\ via\ \`CURLOPT_USERNAME\`.
CVE-2016-8619:7.5:NA:The\ function\ \`read_data\(\)\`\ in\ security.c\ in\ curl\ before\ version\ 7.51.0\ is\ vulnerable\ to\ memory\ double\ free.
CVE-2016-8616:4.3:NA:A\ flaw\ was\ found\ in\ curl\ before\ version\ 7.51.0\ When\ re-using\ a\ connection\,\ curl\ was\ doing\ case\ insensitive\ comparisons\ of\ user\ name\ and\ password\ with\ the\ existing\ connections.\ This\ means\ that\ if\ an\ unused\ connection\ with\ proper\ credentials\ exists\ for\ a\ protocol\ that\ has\ connection-scoped\ credentials\,\ an\ attacker\ can\ cause\ that\ connection\ to\ be\ reused\ if\ s/he\ knows\ the\ case-insensitive\ version\ of\ the\ correct\ password.
CVE-2016-8620:7.5:NA:The\ \'globbing\'\ feature\ in\ curl\ before\ version\ 7.51.0\ has\ a\ flaw\ that\ leads\ to\ integer\ overflow\ and\ out-of-bounds\ read\ via\ user\ controlled\ input.
CVE-2016-8624:5.0:NA:curl\ before\ version\ 7.51.0\ doesn\'t\ parse\ the\ authority\ component\ of\ the\ URL\ correctly\ when\ the\ host\ name\ part\ ends\ with\ a\ \'#\'\ character\,\ and\ could\ instead\ be\ tricked\ into\ connecting\ to\ a\ different\ host.\ This\ may\ have\ security\ implications\ if\ you\ for\ example\ use\ an\ URL\ parser\ that\ follows\ the\ RFC\ to\ check\ for\ allowed\ domains\ before\ using\ curl\ to\ request\ them.
CVE-2016-8621:5.0:NA:The\ \`curl_getdate\`\ function\ in\ curl\ before\ version\ 7.51.0\ is\ vulnerable\ to\ an\ out\ of\ bounds\ read\ if\ it\ receives\ an\ input\ with\ one\ digit\ short.
CVE-2016-8623:5.0:NA:A\ flaw\ was\ found\ in\ curl\ before\ version\ 7.51.0.\ The\ way\ curl\ handles\ cookies\ permits\ other\ threads\ to\ trigger\ a\ use-after-free\ leading\ to\ information\ disclosure.
CVE-2016-8625:5.0:NA:curl\ before\ version\ 7.51.0\ uses\ outdated\ IDNA\ 2003\ standard\ to\ handle\ International\ Domain\ Names\ and\ this\ may\ lead\ users\ to\ potentially\ and\ unknowingly\ issue\ network\ transfer\ requests\ to\ the\ wrong\ host.
CVE-2016-9586:6.8:NA:curl\ before\ version\ 7.52.0\ is\ vulnerable\ to\ a\ buffer\ overflow\ when\ doing\ a\ large\ floating\ point\ output\ in\ libcurl\'s\ implementation\ of\ the\ printf\(\)\ functions.\ If\ there\ are\ any\ application\ that\ accepts\ a\ format\ string\ from\ the\ outside\ without\ necessary\ input\ filtering\,\ it\ could\ allow\ remote\ attacks.
CVE-2016-9594:6.8:NA:curl\ before\ version\ 7.52.1\ is\ vulnerable\ to\ an\ uninitialized\ random\ in\ libcurl\'s\ internal\ function\ that\ returns\ a\ good\ 32bit\ random\ value.\ \ Having\ a\ weak\ or\ virtually\ non-existent\ random\ value\ makes\ the\ operations\ that\ use\ it\ vulnerable.
CVE-2016-9952:6.8:NA:The\ verify_certificate\ function\ in\ lib/vtls/schannel.c\ in\ libcurl\ 7.30.0\ through\ 7.51.0\,\ when\ built\ for\ Windows\ CE\ using\ the\ schannel\ TLS\ backend\,\ makes\ it\ easier\ for\ remote\ attackers\ to\ conduct\ man-in-the-middle\ attacks\ via\ a\ crafted\ wildcard\ SAN\ in\ a\ server\ certificate\,\ as\ demonstrated\ by\ \"\*.com.\"
CVE-2016-9953:7.5:NA:The\ verify_certificate\ function\ in\ lib/vtls/schannel.c\ in\ libcurl\ 7.30.0\ through\ 7.51.0\,\ when\ built\ for\ Windows\ CE\ using\ the\ schannel\ TLS\ backend\,\ allows\ remote\ attackers\ to\ obtain\ sensitive\ information\,\ cause\ a\ denial\ of\ service\ \(crash\)\,\ or\ possibly\ have\ unspecified\ other\ impact\ via\ a\ wildcard\ certificate\ name\,\ which\ triggers\ an\ out-of-bounds\ read.
CVE-2017-1000101:4.3:NA:curl\ supports\ \"globbing\"\ of\ URLs\,\ in\ which\ a\ user\ can\ pass\ a\ numerical\ range\ to\ have\ the\ tool\ iterate\ over\ those\ numbers\ to\ do\ a\ sequence\ of\ transfers.\ In\ the\ globbing\ function\ that\ parses\ the\ numerical\ range\,\ there\ was\ an\ omission\ that\ made\ curl\ read\ a\ byte\ beyond\ the\ end\ of\ the\ URL\ if\ given\ a\ carefully\ crafted\,\ or\ just\ wrongly\ written\,\ URL.\ The\ URL\ is\ stored\ in\ a\ heap\ based\ buffer\,\ so\ it\ could\ then\ be\ made\ to\ wrongly\ read\ something\ else\ instead\ of\ crashing.\ An\ example\ of\ a\ URL\ that\ triggers\ the\ flaw\ would\ be\ \`http://ur%20\[0-60000000000000000000\`.
CVE-2017-2629:4.0:NA:curl\ before\ 7.53.0\ has\ an\ incorrect\ TLS\ Certificate\ Status\ Request\ extension\ feature\ that\ asks\ for\ a\ fresh\ proof\ of\ the\ server\'s\ certificate\'s\ validity\ in\ the\ code\ that\ checks\ for\ a\ test\ success\ or\ failure.\ It\ ends\ up\ always\ thinking\ there\'s\ valid\ proof\,\ even\ when\ there\ is\ none\ or\ if\ the\ server\ doesn\'t\ support\ the\ TLS\ extension\ in\ question.\ This\ could\ lead\ to\ users\ not\ detecting\ when\ a\ server\'s\ certificate\ goes\ invalid\ or\ otherwise\ be\ mislead\ that\ the\ server\ is\ in\ a\ better\ shape\ than\ it\ is\ in\ reality.\ This\ flaw\ also\ exists\ in\ the\ command\ line\ tool\ \(--cert-status\).
CVE-2017-8816:7.5:NA:The\ NTLM\ authentication\ feature\ in\ curl\ and\ libcurl\ before\ 7.57.0\ on\ 32-bit\ platforms\ allows\ attackers\ to\ cause\ a\ denial\ of\ service\ \(integer\ overflow\ and\ resultant\ buffer\ overflow\,\ and\ application\ crash\)\ or\ possibly\ have\ unspecified\ other\ impact\ via\ vectors\ involving\ long\ user\ and\ password\ fields.
CVE-2017-8817:7.5:NA:The\ FTP\ wildcard\ function\ in\ curl\ and\ libcurl\ before\ 7.57.0\ allows\ remote\ attackers\ to\ cause\ a\ denial\ of\ service\ \(out-of-bounds\ read\ and\ application\ crash\)\ or\ possibly\ have\ unspecified\ other\ impact\ via\ a\ string\ that\ ends\ with\ an\ \'\[\'\ character.
CVE-2017-9502:5.0:NA:In\ curl\ before\ 7.54.1\ on\ Windows\ and\ DOS\,\ libcurl\'s\ default\ protocol\ function\,\ which\ is\ the\ logic\ that\ allows\ an\ application\ to\ set\ which\ protocol\ libcurl\ should\ attempt\ to\ use\ when\ given\ a\ URL\ without\ a\ scheme\ part\,\ had\ a\ flaw\ that\ could\ lead\ to\ it\ overwriting\ a\ heap\ based\ memory\ buffer\ with\ seven\ bytes.\ If\ the\ default\ protocol\ is\ specified\ to\ be\ FILE\ or\ a\ file:\ URL\ lacks\ two\ slashes\,\ the\ given\ \"URL\"\ starts\ with\ a\ drive\ letter\,\ and\ libcurl\ is\ built\ for\ Windows\ or\ DOS\,\ then\ libcurl\ would\ copy\ the\ path\ 7\ bytes\ off\,\ so\ that\ the\ end\ of\ the\ given\ path\ would\ write\ beyond\ the\ malloc\ buffer\ \(7\ bytes\ being\ the\ length\ in\ bytes\ of\ the\ ascii\ string\ \"file://\"\).
CVE-2018-1000007:5.0:9.8:libcurl\ 7.1\ through\ 7.57.0\ might\ accidentally\ leak\ authentication\ data\ to\ third\ parties.\ When\ asked\ to\ send\ custom\ headers\ in\ its\ HTTP\ requests\,\ libcurl\ will\ send\ that\ set\ of\ headers\ first\ to\ the\ host\ in\ the\ initial\ URL\ but\ also\,\ if\ asked\ to\ follow\ redirects\ and\ a\ 30X\ HTTP\ response\ code\ is\ returned\,\ to\ the\ host\ mentioned\ in\ URL\ in\ the\ \`Location:\`\ response\ header\ value.\ Sending\ the\ same\ set\ of\ headers\ to\ subsequent\ hosts\ is\ in\ particular\ a\ problem\ for\ applications\ that\ pass\ on\ custom\ \`Authorization:\`\ headers\,\ as\ this\ header\ often\ contains\ privacy\ sensitive\ information\ or\ data\ that\ could\ allow\ others\ to\ impersonate\ the\ libcurl-using\ client\'s\ request.
CVE-2018-1000120:7.5:NA:A\ buffer\ overflow\ exists\ in\ curl\ 7.12.3\ to\ and\ including\ curl\ 7.58.0\ in\ the\ FTP\ URL\ handling\ that\ allows\ an\ attacker\ to\ cause\ a\ denial\ of\ service\ or\ worse.
CVE-2018-1000121:5.0:NA:A\ NULL\ pointer\ dereference\ exists\ in\ curl\ 7.21.0\ to\ and\ including\ curl\ 7.58.0\ in\ the\ LDAP\ code\ that\ allows\ an\ attacker\ to\ cause\ a\ denial\ of\ service
CVE-2018-1000122:6.4:NA:A\ buffer\ over-read\ exists\ in\ curl\ 7.20.0\ to\ and\ including\ curl\ 7.58.0\ in\ the\ RTSP+RTP\ handling\ code\ that\ allows\ an\ attacker\ to\ cause\ a\ denial\ of\ service\ or\ information\ leakage
CVE-2018-1000301:6.4:NA:curl\ version\ curl\ 7.20.0\ to\ and\ including\ curl\ 7.59.0\ contains\ a\ CWE-126:\ Buffer\ Over-read\ vulnerability\ in\ denial\ of\ service\ that\ can\ result\ in\ curl\ can\ be\ tricked\ into\ reading\ data\ beyond\ the\ end\ of\ a\ heap\ based\ buffer\ used\ to\ store\ downloaded\ RTSP\ content..\ This\ vulnerability\ appears\ to\ have\ been\ fixed\ in\ curl\ \<\ 7.20.0\ and\ curl\ \>=\ 7.60.0.
CVE-2018-16839:7.5:NA:Curl\ versions\ 7.33.0\ through\ 7.61.1\ are\ vulnerable\ to\ a\ buffer\ overrun\ in\ the\ SASL\ authentication\ code\ that\ may\ lead\ to\ denial\ of\ service.
CVE-2018-16842:6.4:NA:Curl\ versions\ 7.14.1\ through\ 7.61.1\ are\ vulnerable\ to\ a\ heap-based\ buffer\ over-read\ in\ the\ tool_msgs.c:voutf\(\)\ function\ that\ may\ result\ in\ information\ exposure\ and\ denial\ of\ service.
CVE-2019-5443:4.4:7.8:A\ non-privileged\ user\ or\ program\ can\ put\ code\ and\ a\ config\ file\ in\ a\ known\ non-privileged\ path\ \(under\ C:/usr/local/\)\ that\ will\ make\ curl\ \<=\ 7.65.1\ automatically\ run\ the\ code\ \(as\ an\ openssl\ \"engine\"\)\ on\ invocation.\ If\ that\ curl\ is\ invoked\ by\ a\ privileged\ user\ it\ can\ do\ anything\ it\ wants.
CVE-2019-5482:7.5:9.8:Heap\ buffer\ overflow\ in\ the\ TFTP\ protocol\ handler\ in\ cURL\ 7.19.4\ to\ 7.65.3.
CVE-2020-8177:4.6:7.8:curl\ 7.20.0\ through\ 7.70.0\ is\ vulnerable\ to\ improper\ restriction\ of\ names\ for\ files\ and\ other\ resources\ that\ can\ lead\ too\ overwriting\ a\ local\ file\ when\ the\ -J\ flag\ is\ used.
CVE-2020-8284:4.3:3.7:A\ malicious\ server\ can\ use\ the\ FTP\ PASV\ response\ to\ trick\ curl\ 7.73.0\ and\ earlier\ into\ connecting\ back\ to\ a\ given\ IP\ address\ and\ port\,\ and\ this\ way\ potentially\ make\ curl\ extract\ information\ about\ services\ that\ are\ otherwise\ private\ and\ not\ disclosed\,\ for\ example\ doing\ port\ scanning\ and\ service\ banner\ extractions.
CVE-2021-22898:2.6:3.1:curl\ 7.7\ through\ 7.76.1\ suffers\ from\ an\ information\ disclosure\ when\ the\ \`-t\`\ command\ line\ option\,\ known\ as\ \`CURLOPT_TELNETOPTIONS\`\ in\ libcurl\,\ is\ used\ to\ send\ variable=content\ pairs\ to\ TELNET\ servers.\ Due\ to\ a\ flaw\ in\ the\ option\ parser\ for\ sending\ NEW_ENV\ variables\,\ libcurl\ could\ be\ made\ to\ pass\ on\ uninitialized\ data\ from\ a\ stack\ based\ buffer\ to\ the\ server\,\ resulting\ in\ potentially\ revealing\ sensitive\ internal\ information\ to\ the\ server\ using\ a\ clear-text\ network\ protocol.
CVE-2021-22922:4.3:6.5:When\ curl\ is\ instructed\ to\ download\ content\ using\ the\ metalink\ feature\,\ thecontents\ is\ verified\ against\ a\ hash\ provided\ in\ the\ metalink\ XML\ file.The\ metalink\ XML\ file\ points\ out\ to\ the\ client\ how\ to\ get\ the\ same\ contentfrom\ a\ set\ of\ different\ URLs\,\ potentially\ hosted\ by\ different\ servers\ and\ theclient\ can\ then\ download\ the\ file\ from\ one\ or\ several\ of\ them.\ In\ a\ serial\ orparallel\ manner.If\ one\ of\ the\ servers\ hosting\ the\ contents\ has\ been\ breached\ and\ the\ contentsof\ the\ specific\ file\ on\ that\ server\ is\ replaced\ with\ a\ modified\ payload\,\ curlshould\ detect\ this\ when\ the\ hash\ of\ the\ file\ mismatches\ after\ a\ completeddownload.\ It\ should\ remove\ the\ contents\ and\ instead\ try\ getting\ the\ contentsfrom\ another\ URL.\ This\ is\ not\ done\,\ and\ instead\ such\ a\ hash\ mismatch\ is\ onlymentioned\ in\ text\ and\ the\ potentially\ malicious\ content\ is\ kept\ in\ the\ file\ ondisk.
CVE-2021-22923:2.6:5.3:When\ curl\ is\ instructed\ to\ get\ content\ using\ the\ metalink\ feature\,\ and\ a\ user\ name\ and\ password\ are\ used\ to\ download\ the\ metalink\ XML\ file\,\ those\ same\ credentials\ are\ then\ subsequently\ passed\ on\ to\ each\ of\ the\ servers\ from\ which\ curl\ will\ download\ or\ try\ to\ download\ the\ contents\ from.\ Often\ contrary\ to\ the\ user\'s\ expectations\ and\ intentions\ and\ without\ telling\ the\ user\ it\ happened.
CVE-2021-22925:5.0:5.3:curl\ supports\ the\ \`-t\`\ command\ line\ option\,\ known\ as\ \`CURLOPT_TELNETOPTIONS\`in\ libcurl.\ This\ rarely\ used\ option\ is\ used\ to\ send\ variable=content\ pairs\ toTELNET\ servers.Due\ to\ flaw\ in\ the\ option\ parser\ for\ sending\ \`NEW_ENV\`\ variables\,\ libcurlcould\ be\ made\ to\ pass\ on\ uninitialized\ data\ from\ a\ stack\ based\ buffer\ to\ theserver.\ Therefore\ potentially\ revealing\ sensitive\ internal\ information\ to\ theserver\ using\ a\ clear-text\ network\ protocol.This\ could\ happen\ because\ curl\ did\ not\ call\ and\ use\ sscanf\(\)\ correctly\ whenparsing\ the\ string\ provided\ by\ the\ application.
CVE-2021-22926:5.0:7.5:libcurl-using\ applications\ can\ ask\ for\ a\ specific\ client\ certificate\ to\ be\ used\ in\ a\ transfer.\ This\ is\ done\ with\ the\ \`CURLOPT_SSLCERT\`\ option\ \(\`--cert\`\ with\ the\ command\ line\ tool\).When\ libcurl\ is\ built\ to\ use\ the\ macOS\ native\ TLS\ library\ Secure\ Transport\,\ an\ application\ can\ ask\ for\ the\ client\ certificate\ by\ name\ or\ with\ a\ file\ name\ -\ using\ the\ same\ option.\ If\ the\ name\ exists\ as\ a\ file\,\ it\ will\ be\ used\ instead\ of\ by\ name.If\ the\ appliction\ runs\ with\ a\ current\ working\ directory\ that\ is\ writable\ by\ other\ users\ \(like\ \`/tmp\`\)\,\ a\ malicious\ user\ can\ create\ a\ file\ name\ with\ the\ same\ name\ as\ the\ app\ wants\ to\ use\ by\ name\,\ and\ thereby\ trick\ the\ application\ to\ use\ the\ file\ based\ cert\ instead\ of\ the\ one\ referred\ to\ by\ name\ making\ libcurl\ send\ the\ wrong\ client\ certificate\ in\ the\ TLS\ connection\ handshake.
CVE-2021-22946:5.0:7.5:A\ user\ can\ tell\ curl\ \>=\ 7.20.0\ and\ \<=\ 7.78.0\ to\ require\ a\ successful\ upgrade\ to\ TLS\ when\ speaking\ to\ an\ IMAP\,\ POP3\ or\ FTP\ server\ \(\`--ssl-reqd\`\ on\ the\ command\ line\ or\`CURLOPT_USE_SSL\`\ set\ to\ \`CURLUSESSL_CONTROL\`\ or\ \`CURLUSESSL_ALL\`\ withlibcurl\).\ This\ requirement\ could\ be\ bypassed\ if\ the\ server\ would\ return\ a\ properly\ crafted\ but\ perfectly\ legitimate\ response.This\ flaw\ would\ then\ make\ curl\ silently\ continue\ its\ operations\ \*\*withoutTLS\*\*\ contrary\ to\ the\ instructions\ and\ expectations\,\ exposing\ possibly\ sensitive\ data\ in\ clear\ text\ over\ the\ network.
CVE-2021-22947:4.3:5.9:When\ curl\ \>=\ 7.20.0\ and\ \<=\ 7.78.0\ connects\ to\ an\ IMAP\ or\ POP3\ server\ to\ retrieve\ data\ using\ STARTTLS\ to\ upgrade\ to\ TLS\ security\,\ the\ server\ can\ respond\ and\ send\ back\ multiple\ responses\ at\ once\ that\ curl\ caches.\ curl\ would\ then\ upgrade\ to\ TLS\ but\ not\ flush\ the\ in-queue\ of\ cached\ responses\ but\ instead\ continue\ using\ and\ trustingthe\ responses\ it\ got\ \*before\*\ the\ TLS\ handshake\ as\ if\ they\ were\ authenticated.Using\ this\ flaw\,\ it\ allows\ a\ Man-In-The-Middle\ attacker\ to\ first\ inject\ the\ fake\ responses\,\ then\ pass-through\ the\ TLS\ traffic\ from\ the\ legitimate\ server\ and\ trick\ curl\ into\ sending\ data\ back\ to\ the\ user\ thinking\ the\ attacker\'s\ injected\ data\ comes\ from\ the\ TLS-protected\ server.
CVE-2022-22576:5.5:8.1:An\ improper\ authentication\ vulnerability\ exists\ in\ curl\ 7.33.0\ to\ and\ including\ 7.82.0\ which\ might\ allow\ reuse\ OAUTH2-authenticated\ connections\ without\ properly\ making\ sure\ that\ the\ connection\ was\ authenticated\ with\ the\ same\ credentials\ as\ set\ for\ this\ transfer.\ This\ affects\ SASL-enabled\ protocols:\ SMPTP\(S\)\,\ IMAP\(S\)\,\ POP3\(S\)\ and\ LDAP\(S\)\ \(openldap\ only\).
CVE-2022-27774:3.5:5.7:An\ insufficiently\ protected\ credentials\ vulnerability\ exists\ in\ curl\ 4.9\ to\ and\ include\ curl\ 7.82.0\ are\ affected\ that\ could\ allow\ an\ attacker\ to\ extract\ credentials\ when\ follows\ HTTP\(S\)\ redirects\ is\ used\ with\ authentication\ could\ leak\ credentials\ to\ other\ services\ that\ exist\ on\ different\ protocols\ or\ port\ numbers.
CVE-2022-27776:4.3:6.5:A\ insufficiently\ protected\ credentials\ vulnerability\ in\ fixed\ in\ curl\ 7.83.0\ might\ leak\ authentication\ or\ cookie\ header\ data\ on\ HTTP\ redirects\ to\ the\ same\ host\ but\ another\ port\ number.
CVE-2022-27781:5.0:7.5:libcurl\ provides\ the\ \`CURLOPT_CERTINFO\`\ option\ to\ allow\ applications\ torequest\ details\ to\ be\ returned\ about\ a\ server\'s\ certificate\ chain.Due\ to\ an\ erroneous\ function\,\ a\ malicious\ server\ could\ make\ libcurl\ built\ withNSS\ get\ stuck\ in\ a\ never-ending\ busy-loop\ when\ trying\ to\ retrieve\ thatinformation.
CVE-2022-27782:5.0:7.5:libcurl\ would\ reuse\ a\ previously\ created\ connection\ even\ when\ a\ TLS\ or\ SSHrelated\ option\ had\ been\ changed\ that\ should\ have\ prohibited\ reuse.libcurl\ keeps\ previously\ used\ connections\ in\ a\ connection\ pool\ for\ subsequenttransfers\ to\ reuse\ if\ one\ of\ them\ matches\ the\ setup.\ However\,\ several\ TLS\ andSSH\ settings\ were\ left\ out\ from\ the\ configuration\ match\ checks\,\ making\ themmatch\ too\ easily.
CVE-2022-32206:4.3:6.5:curl\ \<\ 7.84.0\ supports\ \"chained\"\ HTTP\ compression\ algorithms\,\ meaning\ that\ a\ serverresponse\ can\ be\ compressed\ multiple\ times\ and\ potentially\ with\ different\ algorithms.\ The\ number\ of\ acceptable\ \"links\"\ in\ this\ \"decompression\ chain\"\ was\ unbounded\,\ allowing\ a\ malicious\ server\ to\ insert\ a\ virtually\ unlimited\ number\ of\ compression\ steps.The\ use\ of\ such\ a\ decompression\ chain\ could\ result\ in\ a\ \"malloc\ bomb\"\,\ makingcurl\ end\ up\ spending\ enormous\ amounts\ of\ allocated\ heap\ memory\,\ or\ trying\ toand\ returning\ out\ of\ memory\ errors.
CVE-2022-32208:4.3:5.9:When\ curl\ \<\ 7.84.0\ does\ FTP\ transfers\ secured\ by\ krb5\,\ it\ handles\ message\ verification\ failures\ wrongly.\ This\ flaw\ makes\ it\ possible\ for\ a\ Man-In-The-Middle\ attack\ to\ go\ unnoticed\ and\ even\ allows\ it\ to\ inject\ data\ to\ the\ client.
CVE-2022-32221:NA:9.8:When\ doing\ HTTP\(S\)\ transfers\,\ libcurl\ might\ erroneously\ use\ the\ read\ callback\ \(\`CURLOPT_READFUNCTION\`\)\ to\ ask\ for\ data\ to\ send\,\ even\ when\ the\ \`CURLOPT_POSTFIELDS\`\ option\ has\ been\ set\,\ if\ the\ same\ handle\ previously\ was\ used\ to\ issue\ a\ \`PUT\`\ request\ which\ used\ that\ callback.\ This\ flaw\ may\ surprise\ the\ application\ and\ cause\ it\ to\ misbehave\ and\ either\ send\ off\ the\ wrong\ data\ or\ use\ memory\ after\ free\ or\ similar\ in\ the\ subsequent\ \`POST\`\ request.\ The\ problem\ exists\ in\ the\ logic\ for\ a\ reused\ handle\ when\ it\ is\ changed\ from\ a\ PUT\ to\ a\ POST.
CVE-2022-35252:NA:3.7:When\ curl\ is\ used\ to\ retrieve\ and\ parse\ cookies\ from\ a\ HTTP\(S\)\ server\,\ itaccepts\ cookies\ using\ control\ codes\ that\ when\ later\ are\ sent\ back\ to\ a\ HTTPserver\ might\ make\ the\ server\ return\ 400\ responses.\ Effectively\ allowing\ a\"sister\ site\"\ to\ deny\ service\ to\ all\ siblings.
CVE-2022-43552:NA:5.9:A\ use\ after\ free\ vulnerability\ exists\ in\ curl\ \<7.87.0.\ Curl\ can\ be\ asked\ to\ \*tunnel\*\ virtually\ all\ protocols\ it\ supports\ through\ an\ HTTP\ proxy.\ HTTP\ proxies\ can\ \(and\ often\ do\)\ deny\ such\ tunnel\ operations.\ When\ getting\ denied\ to\ tunnel\ the\ specific\ protocols\ SMB\ or\ TELNET\,\ curl\ would\ use\ a\ heap-allocated\ struct\ after\ it\ had\ been\ freed\,\ in\ its\ transfer\ shutdown\ code\ path.
CVE-2023-27533:NA:8.8:A\ vulnerability\ in\ input\ validation\ exists\ in\ curl\ \<8.0\ during\ communication\ using\ the\ TELNET\ protocol\ may\ allow\ an\ attacker\ to\ pass\ on\ maliciously\ crafted\ user\ name\ and\ \"telnet\ options\"\ during\ server\ negotiation.\ The\ lack\ of\ proper\ input\ scrubbing\ allows\ an\ attacker\ to\ send\ content\ or\ perform\ option\ negotiation\ without\ the\ application\'s\ intent.\ This\ vulnerability\ could\ be\ exploited\ if\ an\ application\ allows\ user\ input\,\ thereby\ enabling\ attackers\ to\ execute\ arbitrary\ code\ on\ the\ system.
CVE-2023-27534:NA:8.8:A\ path\ traversal\ vulnerability\ exists\ in\ curl\ \<8.0.0\ SFTP\ implementation\ causes\ the\ tilde\ \(~\)\ character\ to\ be\ wrongly\ replaced\ when\ used\ as\ a\ prefix\ in\ the\ first\ path\ element\,\ in\ addition\ to\ its\ intended\ use\ as\ the\ first\ element\ to\ indicate\ a\ path\ relative\ to\ the\ user\'s\ home\ directory.\ Attackers\ can\ exploit\ this\ flaw\ to\ bypass\ filtering\ or\ execute\ arbitrary\ code\ by\ crafting\ a\ path\ like\ /~2/foo\ while\ accessing\ a\ server\ with\ a\ specific\ user.
CVE-2023-28319:NA:7.5:A\ use\ after\ free\ vulnerability\ exists\ in\ curl\ \<v8.1.0\ in\ the\ way\ libcurl\ offers\ a\ feature\ to\ verify\ an\ SSH\ server\'s\ public\ key\ using\ a\ SHA\ 256\ hash.\ When\ this\ check\ fails\,\ libcurl\ would\ free\ the\ memory\ for\ the\ fingerprint\ before\ it\ returns\ an\ error\ message\ containing\ the\ \(now\ freed\)\ hash.\ This\ flaw\ risks\ inserting\ sensitive\ heap-based\ data\ into\ the\ error\ message\ that\ might\ be\ shown\ to\ users\ or\ otherwise\ get\ leaked\ and\ revealed.
CVE-2023-28320:NA:5.9:A\ denial\ of\ service\ vulnerability\ exists\ in\ curl\ \<v8.1.0\ in\ the\ way\ libcurl\ provides\ several\ different\ backends\ for\ resolving\ host\ names\,\ selected\ at\ build\ time.\ If\ it\ is\ built\ to\ use\ the\ synchronous\ resolver\,\ it\ allows\ name\ resolves\ to\ time-out\ slow\ operations\ using\ \`alarm\(\)\`\ and\ \`siglongjmp\(\)\`.\ When\ doing\ this\,\ libcurl\ used\ a\ global\ buffer\ that\ was\ not\ mutex\ protected\ and\ a\ multi-threaded\ application\ might\ therefore\ crash\ or\ otherwise\ misbehave.
CVE-2023-28321:NA:5.9:An\ improper\ certificate\ validation\ vulnerability\ exists\ in\ curl\ \<v8.1.0\ in\ the\ way\ it\ supports\ matching\ of\ wildcard\ patterns\ when\ listed\ as\ \"Subject\ Alternative\ Name\"\ in\ TLS\ server\ certificates.\ curl\ can\ be\ built\ to\ use\ its\ own\ name\ matching\ function\ for\ TLS\ rather\ than\ one\ provided\ by\ a\ TLS\ library.\ This\ private\ wildcard\ matching\ function\ would\ match\ IDN\ \(International\ Domain\ Name\)\ hosts\ incorrectly\ and\ could\ as\ a\ result\ accept\ patterns\ that\ otherwise\ should\ mismatch.\ IDN\ hostnames\ are\ converted\ to\ puny\ code\ before\ used\ for\ certificate\ checks.\ Puny\ coded\ names\ always\ start\ with\ \`xn--\`\ and\ should\ not\ be\ allowed\ to\ pattern\ match\,\ but\ the\ wildcard\ check\ in\ curl\ could\ still\ check\ for\ \`x\*\`\,\ which\ would\ match\ even\ though\ the\ IDN\ name\ most\ likely\ contained\ nothing\ even\ resembling\ an\ \`x\`.
CVE-2023-28322:NA:3.7:An\ information\ disclosure\ vulnerability\ exists\ in\ curl\ \<v8.1.0\ when\ doing\ HTTP\(S\)\ transfers\,\ libcurl\ might\ erroneously\ use\ the\ read\ callback\ \(\`CURLOPT_READFUNCTION\`\)\ to\ ask\ for\ data\ to\ send\,\ even\ when\ the\ \`CURLOPT_POSTFIELDS\`\ option\ has\ been\ set\,\ if\ the\ same\ handle\ previously\ wasused\ to\ issue\ a\ \`PUT\`\ request\ which\ used\ that\ callback.\ This\ flaw\ may\ surprise\ the\ application\ and\ cause\ it\ to\ misbehave\ and\ either\ send\ off\ the\ wrong\ data\ or\ use\ memory\ after\ free\ or\ similar\ in\ the\ second\ transfer.\ The\ problem\ exists\ in\ the\ logic\ for\ a\ reused\ handle\ when\ it\ is\ \(expected\ to\ be\)\ changed\ from\ a\ PUT\ to\ a\ POST.

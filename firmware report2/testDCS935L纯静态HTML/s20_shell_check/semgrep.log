METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 759 files tracked by git with 7 Code rules:
  Scanning 54 files with 7 bash rules.
                     
                     
┌───────────────────┐
│ 395 Code Findings │
└───────────────────┘
                                                                   
    /logs/firmware/squashfs-root/etc/rc.d/init.d/HNAPPushService-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           22┆ $binpath &
            ⋮┆----------------------------------------
           29┆ killall $prog
                                                           
    /logs/firmware/squashfs-root/etc/rc.d/init.d/bonjour-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           28┆ enable=`$configpath -read Bonjour Enable`
            ⋮┆----------------------------------------
           32┆ killall -2 $prog
            ⋮┆----------------------------------------
           33┆ $make_bonjour_file_binpath
            ⋮┆----------------------------------------
           37┆ $binpath -f $bonjour_dhnap_service_file -b
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           43┆ Target2=$CameraName`echo $mac|cut -d: -f 5``echo $mac|cut -d: -f 6`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           43┆ Target2=$CameraName`echo $mac|cut -d: -f 5``echo $mac|cut -d: -f 6`
            ⋮┆----------------------------------------
           43┆ Target2=$CameraName`echo $mac|cut -d: -f 5``echo $mac|cut -d: -f 6`
            ⋮┆----------------------------------------
           45┆ Target1=`echo $Target1|tr '[A-Z]' '[a-z]'`
            ⋮┆----------------------------------------
           46┆ Target2=`echo $Target2|tr '[A-Z]' '[a-z]'`
            ⋮┆----------------------------------------
           47┆ Target3=`echo $Target3|tr '[A-Z]' '[a-z]'`
            ⋮┆----------------------------------------
           50┆ $binpath -f $bonjour_http_service_file -h $Target1 -b
            ⋮┆----------------------------------------
           51┆ $binpath -f $bonjour_http_service_file -h $Target2 -b
            ⋮┆----------------------------------------
           53┆ $binpath -f $bonjour_http_service_file -h $Target3 -b
            ⋮┆----------------------------------------
           58┆ $binpath -f $bonjour_wac_service_file -b
            ⋮┆----------------------------------------
           63┆ $binpath -f $bonjour_http_service_file -b
            ⋮┆----------------------------------------
           72┆ killall -2 $prog
            ⋮┆----------------------------------------
           78┆ killall -1 $prog
                                                        
    /logs/firmware/squashfs-root/etc/rc.d/init.d/ddns-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           24┆ enable=`$configpath -read DDNS Enable`
            ⋮┆----------------------------------------
           28┆ $binpath $args&
            ⋮┆----------------------------------------
           37┆ /usr/bin/killall $prog
                                                       
    /logs/firmware/squashfs-root/etc/rc.d/init.d/ddp-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           24┆ $binpath br0 1>/dev/null 2>&1 &
            ⋮┆----------------------------------------
           32┆ /usr/bin/killall $prog
                                                        
    /logs/firmware/squashfs-root/etc/rc.d/init.d/driver 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           15┆ insmod $MODULE_DIR/hwmon.ko
            ⋮┆----------------------------------------
           16┆ insmod $MODULE_DIR/gpio_i2c.ko
            ⋮┆----------------------------------------
           17┆ insmod $MODULE_DIR/al3010.ko dwALSGain=3
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/httpd-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           21┆ cd /web; ./httpd $http_port 1 1 1&
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           30┆ kill `pidof httpd`
            ⋮┆----------------------------------------
           42┆ kill -USR1 `pidof httpd`
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/https-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           26┆ /usr/sbin/cfg -a w -p /var stunnel-https.conf https accept $https_port
            ⋮┆----------------------------------------
           27┆ /usr/sbin/cfg -a w -p /var stunnel-https.conf https connect $http_port
            ⋮┆----------------------------------------
           28┆ /usr/sbin/cfg -a w -p /var stunnel-https.conf https localconnect $http_port_real
            ⋮┆----------------------------------------
           34┆ cd /web; ./ssl-httpd $http_port 1 0 0&
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           41┆ /bin/kill `pidof stunnel`
            ⋮┆----------------------------------------
           42┆ /bin/kill `pidof ssl-httpd`
            ⋮┆----------------------------------------
           53┆ kill -USR1 `pidof ssl-httpd`
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/hwmon-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           22┆ $binpath &
            ⋮┆----------------------------------------
           29┆ killall $prog
                                                          
    /logs/firmware/squashfs-root/etc/rc.d/init.d/ipfind-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           25┆ $binpath $netinterface &
            ⋮┆----------------------------------------
           35┆ kill $line
                                                      
    /logs/firmware/squashfs-root/etc/rc.d/init.d/ipv4 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           38┆ i=`echo $ipaddr | cut -d. -f$cnt`
            ⋮┆----------------------------------------
           38┆ i=`echo $ipaddr | cut -d. -f$cnt`
            ⋮┆----------------------------------------
           39┆ m=`echo $netmask | cut -d. -f$cnt`
            ⋮┆----------------------------------------
           39┆ m=`echo $netmask | cut -d. -f$cnt`
            ⋮┆----------------------------------------
           40┆ g=`echo $gateway | cut -d. -f$cnt`
            ⋮┆----------------------------------------
           40┆ g=`echo $gateway | cut -d. -f$cnt`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           41┆ n1=`echo $(($i&$m))`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           41┆ n1=`echo $(($i&$m))`
            ⋮┆----------------------------------------
           41┆ n1=`echo $(($i&$m))`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           42┆ n2=`echo $(($g&$m))`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           42┆ n2=`echo $(($g&$m))`
            ⋮┆----------------------------------------
           42┆ n2=`echo $(($g&$m))`
            ⋮┆----------------------------------------
           45┆ new_gateway=$new_gateway$(($n1|$((~$m&$g))))
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           45┆ new_gateway=$new_gateway$(($n1|$((~$m&$g))))
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           45┆ new_gateway=$new_gateway$(($n1|$((~$m&$g))))
            ⋮┆----------------------------------------
           45┆ new_gateway=$new_gateway$(($n1|$((~$m&$g))))
            ⋮┆----------------------------------------
           53┆ cnt=$(($cnt+1))
            ⋮┆----------------------------------------
           57┆ userconfig -write NETWORK_V4 Gateway $gateway
            ⋮┆----------------------------------------
           58┆ route add default gw $gateway metric 10
            ⋮┆----------------------------------------
           78┆ ifconfig br0 $ipaddr netmask $netmask up
            ⋮┆----------------------------------------
           79┆ route add default gw $gateway metric 10
            ⋮┆----------------------------------------
           97┆ $udhcpd_script start
            ⋮┆----------------------------------------
           98┆ $service_script restart &
            ⋮┆----------------------------------------
          103┆ ifconfig $iface $ipaddr netmask $netmask
            ⋮┆----------------------------------------
          112┆ $service_script restart &
            ⋮┆----------------------------------------
          117┆ ifconfig $iface $ipaddr netmask $netmask
            ⋮┆----------------------------------------
          121┆ $service_script restart &
            ⋮┆----------------------------------------
          126┆ $udhcpc_script start
            ⋮┆----------------------------------------
          130┆ $service_script restart &
            ⋮┆----------------------------------------
          136┆ $pppoe_script restart
            ⋮┆----------------------------------------
          149┆ $udhcpd_script stop
            ⋮┆----------------------------------------
          150┆ $udhcpc_script stop
            ⋮┆----------------------------------------
          151┆ $pppoe_script stop
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/llmnr-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           25┆ $binpath $Interfacce $ModelName $mac &
            ⋮┆----------------------------------------
           27┆ $binpath $Interfacce $CameraName $mac &
            ⋮┆----------------------------------------
           34┆ killall $prog
                                                                  
    /logs/firmware/squashfs-root/etc/rc.d/init.d/mydlink_check.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           10┆ version=`cat $mydlink_root/version|cut -d '=' -f 2`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.best-practice.useless-cat                                    
          Useless call to 'cat' in a pipeline. Use '<' and '>' for any command to read from a file or
          write to a file.                                                                           
                                                                                                     
           10┆ version=`cat $mydlink_root/version|cut -d '=' -f 2`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           19┆ file=`echo $line|cut -d ' ' -f 2`
            ⋮┆----------------------------------------
           20┆ md5=`echo $line|cut -d ' ' -f 1`
            ⋮┆----------------------------------------
           22┆ v=`$md5sum /mydlink/$file`
            ⋮┆----------------------------------------
           30┆ return $check_ret
            ⋮┆----------------------------------------
           39┆ rm -rf $mydlink_root/*
            ⋮┆----------------------------------------
           40┆ tar -xzf $default_agent_package -C $mydlink_root
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/network 
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           20┆ mac=$mac`echo $macaddress | cut -d: -f$cnt`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           20┆ mac=$mac`echo $macaddress | cut -d: -f$cnt`
            ⋮┆----------------------------------------
           20┆ mac=$mac`echo $macaddress | cut -d: -f$cnt`
            ⋮┆----------------------------------------
           21┆ cnt=$(($cnt+1))
            ⋮┆----------------------------------------
           32┆ $binpath
            ⋮┆----------------------------------------
           43┆ kill $line
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/ntpc.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           12┆ /bin/kill `pidof ntpcdo.sh`
            ⋮┆----------------------------------------
           13┆ /bin/kill `pidof ntpclient`
                                                           
    /logs/firmware/squashfs-root/etc/rc.d/init.d/ntpcdo.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           11┆ kill `pidof ntpclient`
            ⋮┆----------------------------------------
           14┆ kill `pidof ntpclient`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           17┆ sleep $1
            ⋮┆----------------------------------------
           28┆ synctime=$(($intervel * 3600))
            ⋮┆----------------------------------------
           43┆ sleep $retrysleep
            ⋮┆----------------------------------------
           49┆ ntpstate=$(($ntpstate + 1))
            ⋮┆----------------------------------------
           50┆ /usr/sbin/msger sinfo 0 sntpstate 0 $ntpstate
                                                          
    /logs/firmware/squashfs-root/etc/rc.d/init.d/pppoe.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           15┆ cfg -a w -p /var/config/ppp/ pppoe.conf "" "USER" $PPPoEUID
            ⋮┆----------------------------------------
           17┆ echo -ne "\""$PPPoEUID"\"  *       \""$PPPoEPWD"\"\n" >                   
  /var/config/ppp/pap-secrets                                                            
            ⋮┆----------------------------------------
           18┆ echo -ne "\""$PPPoEUID"\"   *       \""$PPPoEPWD"\"\n" > /var/config/ppp/chap-secrets
            ⋮┆----------------------------------------
           19┆ cfg -a w ddns.conf "" interface $DEV
                                                          
    /logs/firmware/squashfs-root/etc/rc.d/init.d/ptctl.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           10┆ /usr/sbin/ptctrl -h -speed=$p_speed
            ⋮┆----------------------------------------
           11┆ /usr/sbin/ptctrl -v -speed=$t_speed
            ⋮┆----------------------------------------
           12┆ /usr/sbin/ptctrl -h -step=$p_step
            ⋮┆----------------------------------------
           13┆ /usr/sbin/ptctrl -v -step=$t_step
            ⋮┆----------------------------------------
           14┆ /usr/sbin/ptctrl -h -scanspeed=$scan_speed
            ⋮┆----------------------------------------
           15┆ /usr/sbin/ptctrl -pstay=$stay_time
            ⋮┆----------------------------------------
           23┆ pan=`userconfig -read PAN_TILT PositionPan$i`
            ⋮┆----------------------------------------
           24┆ tilt=`userconfig -read PAN_TILT PositionTilt$i`
            ⋮┆----------------------------------------
           25┆ /usr/sbin/ptctrl -h -presetpos$i=$pan
            ⋮┆----------------------------------------
           26┆ /usr/sbin/ptctrl -v -presetpos$i=$tilt
            ⋮┆----------------------------------------
           34┆ echo "start up preset[0-8]: " $startup
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           36┆ /usr/sbin/ptctrl -preset=$(($startup-1))
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           36┆ /usr/sbin/ptctrl -preset=$(($startup-1))
                                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/restore_other_config.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           23┆ ssid=$modelname"-"`echo $mac|cut -d: -f 5``echo $mac|cut -d: -f 6`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           23┆ ssid=$modelname"-"`echo $mac|cut -d: -f 5``echo $mac|cut -d: -f 6`
            ⋮┆----------------------------------------
           23┆ ssid=$modelname"-"`echo $mac|cut -d: -f 5``echo $mac|cut -d: -f 6`
            ⋮┆----------------------------------------
           24┆ userconfig -write WIRELESS_AP SSID $ssid
            ⋮┆----------------------------------------
           29┆ userconfig -write WIRELESS_AP PreSharedKey $psk
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/rtspd-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           21┆ /usr/sbin/rtsp/rtspd -p $port -v 1>/dev/null 2>/dev/null
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           25┆ kill `pidof rtspd`
                                                            
    /logs/firmware/squashfs-root/etc/rc.d/init.d/service.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           18┆ $mydlink_script start
            ⋮┆----------------------------------------
           29┆ $mydlink_script stop
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/smtps-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           19┆ /usr/sbin/cfg -a w -p /var stunnel-smtps.conf smtps connect $server_addr:$server_port
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           35┆ /bin/kill `pidof stunnel-smtps`
                                                                  
    /logs/firmware/squashfs-root/etc/rc.d/init.d/smtps-snapshot-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           19┆ /usr/sbin/cfg -a w -p /var stunnel-smtps-snapshot.conf smtps connect $server_addr:$server_port
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           35┆ /bin/kill `pidof stunnel-smtps-snapshot`
                                                         
    /logs/firmware/squashfs-root/etc/rc.d/init.d/stop.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
            2┆ kill `pidof sleep`
            ⋮┆----------------------------------------
            9┆ kill `pidof ntpc`
            ⋮┆----------------------------------------
           11┆ kill `cat /var/run/udhcpc.pid`
                                                            
    /logs/firmware/squashfs-root/etc/rc.d/init.d/syslogd.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           15┆ $binpath $options
            ⋮┆----------------------------------------
           21┆ killall $prog
                                                           
    /logs/firmware/squashfs-root/etc/rc.d/init.d/udhcpc.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           21┆ netphy=$(($netphy-4))
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           39┆ /bin/kill `pidof udhcpc`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           44┆ ifconfig $iface up
            ⋮┆----------------------------------------
           46┆ /sbin/udhcpc -n -i $iface -H "$hostname" -p $pidfile
            ⋮┆----------------------------------------
           48┆ /sbin/udhcpc -n -r "$ipAddr" -i $iface -H "$hostname" -p $pidfile
            ⋮┆----------------------------------------
           58┆ dhcp_count=$(($dhcp_count+1))
            ⋮┆----------------------------------------
           90┆ ipAddr="`/sbin/ifconfig $DEV | sed -nr 's/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'`"
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
          112┆ /bin/kill `pidof udhcpc`
            ⋮┆----------------------------------------
          131┆ echo `date`
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          145┆ $service_script restart &
            ⋮┆----------------------------------------
          160┆ kill $line
            ⋮┆----------------------------------------
          162┆ rm -f /var/run/$1.pid
                                                           
    /logs/firmware/squashfs-root/etc/rc.d/init.d/udhcpd.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           41┆ $udhcpd_bin $udhcpd_args >/dev/null &
            ⋮┆----------------------------------------
           46┆ mkdir -p $leases_path
            ⋮┆----------------------------------------
           47┆ touch $leases_path/udhcpd.leases
            ⋮┆----------------------------------------
           57┆ killall $prog_name
                                                        
    /logs/firmware/squashfs-root/etc/rc.d/init.d/upnp-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           24┆ enable=`$configpath -read UPnP Enable`
            ⋮┆----------------------------------------
           28┆ $binpath $args&
            ⋮┆----------------------------------------
           37┆ /usr/bin/killall $prog
                                                                  
    /logs/firmware/squashfs-root/etc/rc.d/init.d/upnp_igd-http.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            9┆ intport=`$userconfig -read HTTP Port`
            ⋮┆----------------------------------------
           10┆ extport=`$userconfig -read UPnP ExternHTTPPort`
            ⋮┆----------------------------------------
           16┆ enable=`$userconfig -read UPnP EnablePortForward`
            ⋮┆----------------------------------------
           22┆ $binpath portmap "$extport" "$intport"
            ⋮┆----------------------------------------
           37┆ oldport=`cat $portfile`
            ⋮┆----------------------------------------
           40┆ $binpath portdel "$oldport"
                                                                   
    /logs/firmware/squashfs-root/etc/rc.d/init.d/upnp_igd-https.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            9┆ intport=`$userconfig -read HTTPS Port`
            ⋮┆----------------------------------------
           10┆ extport=`$userconfig -read UPnP ExternHTTPSPort`
            ⋮┆----------------------------------------
           16┆ enable1=`$userconfig -read UPnP EnablePortForward`
            ⋮┆----------------------------------------
           17┆ enable2=`$userconfig -read HTTPS Enable`
            ⋮┆----------------------------------------
           23┆ $binpath portmap "$extport" "$intport"
            ⋮┆----------------------------------------
           38┆ oldport=`cat $portfile`
            ⋮┆----------------------------------------
           41┆ $binpath portdel "$oldport"
                                                                  
    /logs/firmware/squashfs-root/etc/rc.d/init.d/upnp_igd-rtsp.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            9┆ intport=`$userconfig -read RTSP Port`
            ⋮┆----------------------------------------
           10┆ extport=`$userconfig -read UPnP ExternRTSPPort`
            ⋮┆----------------------------------------
           16┆ enable=`$userconfig -read UPnP EnablePortForward`
            ⋮┆----------------------------------------
           22┆ $binpath portmap "$extport" "$intport"
            ⋮┆----------------------------------------
           37┆ oldport=`cat $portfile`
            ⋮┆----------------------------------------
           40┆ $binpath portdel "$oldport"
                                                             
    /logs/firmware/squashfs-root/etc/rc.d/init.d/upnp_igd.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            5┆ model=`$userconfig -read CAMSYSTEM CameraName`
            ⋮┆----------------------------------------
            7┆ model=`$userconfig -read INFO ModelName`
            ⋮┆----------------------------------------
           22┆ $binpath $1 $GetSpecificPortMap $2 TCP >/dev/null 2>&1
            ⋮┆----------------------------------------
           30┆ $binpath $1 $AddPortMap $2 TCP $model $3 >/dev/null 2>&1
            ⋮┆----------------------------------------
           43┆ $binpath $1 $GetSpecificPortMap $2 TCP >/dev/null 2>&1
            ⋮┆----------------------------------------
           50┆ $binpath $1 $DelPortMap $2 TCP >/dev/null 2>&1
            ⋮┆----------------------------------------
           63┆ $binpath $wan_service $GetSpecificPortMap $1 TCP
            ⋮┆----------------------------------------
           75┆ $binpath $wan_service $GetExternalIP
            ⋮┆----------------------------------------
           82┆ portmap $wan_service $2 $3
            ⋮┆----------------------------------------
           86┆ portdel $wan_service $2
            ⋮┆----------------------------------------
           89┆ specific $2
            ⋮┆----------------------------------------
           92┆ getextip $2
                                                            
    /logs/firmware/squashfs-root/etc/rc.d/init.d/userconfig 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           20┆ $binpath -initial
            ⋮┆----------------------------------------
           25┆ $binpath -restore $restore_file
            ⋮┆----------------------------------------
           26┆ rm -f $restore_file
            ⋮┆----------------------------------------
           49┆ $binpath -factory
                                                                
    /logs/firmware/squashfs-root/etc/rc.d/init.d/wanip_detect-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           24┆ $binpath $args >/dev/null 2>&1 &
            ⋮┆----------------------------------------
           31┆ /usr/bin/killall $prog
                                                        
    /logs/firmware/squashfs-root/etc/rc.d/init.d/wscd-0 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           12┆ cp -f /etc/Wireless/$CONFIG_FILE /var/$CONFIG_FILE
            ⋮┆----------------------------------------
           16┆ wscd -mode 2 -c /var/$CONFIG_FILE -w $IFACE -fi /var/$WSCD_FIFO -daemon
            ⋮┆----------------------------------------
           21┆ iwcontrol $IFACE
            ⋮┆----------------------------------------
           27┆ cnt=$(($cnt-1))
            ⋮┆----------------------------------------
           33┆ pid=`cat $PID_FILE`
            ⋮┆----------------------------------------
           35┆ kill $pid
                                              
    /logs/firmware/squashfs-root/etc/rc.d/rcS 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           14┆ mount -t jffs2 $2 $3
            ⋮┆----------------------------------------
           17┆ /usr/bin/flash_eraseall $1
            ⋮┆----------------------------------------
           19┆ mount -t jffs2 $2 $3
            ⋮┆----------------------------------------
           47┆ . $i
            ⋮┆----------------------------------------
           52┆ $i start
                                                    
    /logs/firmware/squashfs-root/sbin/pppoe-connect 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           35┆ LOGGER="/usr/bin/logger -t `basename $0`"
            ⋮┆----------------------------------------
           70┆ . $CONFIG
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
          117┆ if test `uname -s` = Linux ; then
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          118┆ $IFCONFIG $ETH up mtu 1500
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
          133┆ if test `uname -s` = Linux ; then
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          241┆     $SETSID $PPPD pty "$PPPOE_CMD -D $DEBUG-0" \
          242┆                   
  $PPP_STD_OPTIONS \             
          243┆             
  $PPPD_SYNC \             
          244┆    debug >> $DEBUG  
  2>&1                             
            ⋮┆----------------------------------------
          270┆ cat $DEBUG-0 >> $DEBUG
            ⋮┆----------------------------------------
          271┆ rm -f $DEBUG-0
            ⋮┆----------------------------------------
          292┆ $SETSID $OVERRIDE_PPPD_COMMAND &
            ⋮┆----------------------------------------
          295┆ $SETSID $PPPD $PPP_STD_OPTIONS $DEMAND &
            ⋮┆----------------------------------------
          298┆ $SETSID $PPPD pty "$PPPOE_CMD" \
          299┆     $PPP_STD_OPTIONS \
          300┆     $DEMAND \
          301┆     $PPPD_SYNC &
            ⋮┆----------------------------------------
          314┆ $LOGGER -p daemon.notice \
          315┆     "PPPoE connection lost; attempting re-connection."
                                                  
    /logs/firmware/squashfs-root/sbin/pppoe-setup 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           24┆ LOGGER="/usr/bin/logger -t `basename $0`"
            ⋮┆----------------------------------------
           36┆ cp $1 $2
            ⋮┆----------------------------------------
           38┆ $ECHO "*** Error copying $1 to $2"
            ⋮┆----------------------------------------
           39┆ $ECHO "*** Quitting."
            ⋮┆----------------------------------------
           44┆ $ECHO "Welcome to the Roaring Penguin PPPoE client setup.  First, I will run"
            ⋮┆----------------------------------------
           45┆ $ECHO "some checks on your system to make sure the PPPoE client is installed"
            ⋮┆----------------------------------------
           46┆ $ECHO "properly..."
            ⋮┆----------------------------------------
           47┆ $ECHO ""
            ⋮┆----------------------------------------
           51┆ $ECHO "$0: Sorry, you must be root to run this script"
            ⋮┆----------------------------------------
           57┆ $ECHO "Oh, dear, I don't see the file '$CONFIG' anywhere.  Please"
            ⋮┆----------------------------------------
           58┆ $ECHO "re-install the PPPoE client."
            ⋮┆----------------------------------------
           64┆ $ECHO "Oops, I can't execute the program '$PPPD'.  You"
            ⋮┆----------------------------------------
           65┆ $ECHO "must install the PPP software suite, version 2.3.10 or later."
            ⋮┆----------------------------------------
           69┆ . $CONFIG
            ⋮┆----------------------------------------
           77┆ $ECHO "Oh, dear, I can't execute the program '$PPPOE'.  Please"
            ⋮┆----------------------------------------
           78┆ $ECHO "re-install the rp-pppoe client."
            ⋮┆----------------------------------------
           82┆ $ECHO "Looks good!  Now, please enter some information:"
            ⋮┆----------------------------------------
           85┆ $ECHO ""
            ⋮┆----------------------------------------
           86┆ $ECHO "USER NAME"
            ⋮┆----------------------------------------
           87┆ $ECHO ""
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           96┆ if test `uname -s` = "Linux" ; then
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           97┆ $IFCONFIG $ETH > /dev/null 2>&1 || ETH=eth0
            ⋮┆----------------------------------------
           99┆ $ECHO ""
            ⋮┆----------------------------------------
          100┆ $ECHO "INTERFACE"
            ⋮┆----------------------------------------
          101┆ $ECHO ""
            ⋮┆----------------------------------------
          102┆ $ECHO ">>> Enter the Ethernet interface connected to the DSL modem"
            ⋮┆----------------------------------------
          103┆ $ECHO "For Solaris, this is likely to be something like /dev/hme0."
            ⋮┆----------------------------------------
          104┆ $ECHO "For Linux, it will be ethn, where 'n' is a number."
            ⋮┆----------------------------------------
          112┆ $ECHO ""
            ⋮┆----------------------------------------
          113┆ $ECHO "Do you want the link to come up on demand, or stay up continuously?"
            ⋮┆----------------------------------------
          114┆ $ECHO "If you want it to come up on demand, enter the idle time in seconds"
            ⋮┆----------------------------------------
          115┆ $ECHO "after which the link should be dropped.  If you want the link to"
            ⋮┆----------------------------------------
          116┆ $ECHO "stay up permanently, enter 'no' (two letters, lower-case.)"
            ⋮┆----------------------------------------
          117┆ $ECHO "NOTE: Demand-activated links do not interact well with dynamic IP"
            ⋮┆----------------------------------------
          118┆ $ECHO "addresses.  You may have some problems with demand-activated links."
            ⋮┆----------------------------------------
          125┆ $ECHO ""
            ⋮┆----------------------------------------
          126┆ $ECHO "DNS"
            ⋮┆----------------------------------------
          127┆ $ECHO ""
            ⋮┆----------------------------------------
          128┆ $ECHO "Please enter the IP address of your ISP's primary DNS server."
            ⋮┆----------------------------------------
          129┆ $ECHO "If your ISP claims that 'the server will provide DNS addresses',"
            ⋮┆----------------------------------------
          130┆ $ECHO "enter 'server' (all lower-case) here."
            ⋮┆----------------------------------------
          131┆ $ECHO "If you just press enter, I will assume you know what you are"
            ⋮┆----------------------------------------
          132┆ $ECHO "doing and not modify your DNS setup."
            ⋮┆----------------------------------------
          140┆ $ECHO "Please enter the IP address of your ISP's secondary DNS server."
            ⋮┆----------------------------------------
          141┆ $ECHO "If you just press enter, I will assume there is only one DNS server."
            ⋮┆----------------------------------------
          148┆ $ECHO ""
            ⋮┆----------------------------------------
          149┆ $ECHO "PASSWORD"
            ⋮┆----------------------------------------
          150┆ $ECHO ""
            ⋮┆----------------------------------------
          154┆ $ECHO ""
            ⋮┆----------------------------------------
          157┆ $ECHO ""
            ⋮┆----------------------------------------
          167┆ $ECHO "OK, quitting.  Bye."
            ⋮┆----------------------------------------
          173┆ $ECHO ""
            ⋮┆----------------------------------------
          174┆ $ECHO "FIREWALLING"
            ⋮┆----------------------------------------
          175┆ $ECHO ""
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
          176┆ if test `uname -s` != "Linux" ; then
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          177┆ $ECHO "Sorry, firewalling is only supported under Linux.  Consult"
            ⋮┆----------------------------------------
          178┆ $ECHO "your operating system manuals for details on setting up"
            ⋮┆----------------------------------------
          179┆ $ECHO "packet filters for your system."
            ⋮┆----------------------------------------
          182┆ $ECHO "Please choose the firewall rules to use.  Note that these rules are"
            ⋮┆----------------------------------------
          183┆ $ECHO "very basic.  You are strongly encouraged to use a more sophisticated"
            ⋮┆----------------------------------------
          184┆ $ECHO "firewall setup; however, these will provide basic security.  If you"
            ⋮┆----------------------------------------
          185┆ $ECHO "are running any servers on your machine, you must choose 'NONE' and"
            ⋮┆----------------------------------------
          186┆ $ECHO "set up firewalling yourself.  Otherwise, the firewall rules will deny"
            ⋮┆----------------------------------------
          187┆ $ECHO "access to all standard servers like Web, e-mail, ftp, etc.  If you"
            ⋮┆----------------------------------------
          188┆ $ECHO "are using SSH, the rules will block outgoing SSH connections which"
            ⋮┆----------------------------------------
          189┆ $ECHO "allocate a privileged source port."
            ⋮┆----------------------------------------
          190┆ $ECHO ""
            ⋮┆----------------------------------------
          192┆ $ECHO "The firewall choices are:"
            ⋮┆----------------------------------------
          193┆ $ECHO "0 - NONE: This script will not set any firewall rules.  You are responsible"
            ⋮┆----------------------------------------
          194┆ $ECHO "          for ensuring the security of your machine.  You are STRONGLY"
            ⋮┆----------------------------------------
          195┆ $ECHO "          recommended to use some kind of firewall rules."
            ⋮┆----------------------------------------
          196┆ $ECHO "1 - STANDALONE: Appropriate for a basic stand-alone web-surfing workstation"
            ⋮┆----------------------------------------
          197┆ $ECHO "2 - MASQUERADE: Appropriate for a machine acting as an Internet gateway"
            ⋮┆----------------------------------------
          198┆ $ECHO "                for a LAN"
            ⋮┆----------------------------------------
          204┆ $ECHO "Please enter a number from 0 to 2"
            ⋮┆----------------------------------------
          220┆ $ECHO ""
            ⋮┆----------------------------------------
          221┆ $ECHO "** Summary of what you entered **"
            ⋮┆----------------------------------------
          222┆ $ECHO ""
            ⋮┆----------------------------------------
          223┆ $ECHO "Ethernet Interface: $E"
            ⋮┆----------------------------------------
          224┆ $ECHO "User name:          $U"
            ⋮┆----------------------------------------
          226┆ $ECHO "Activate-on-demand: No"
            ⋮┆----------------------------------------
          228┆ $ECHO "Activate-on-demand: Yes; idle timeout = $D seconds"
            ⋮┆----------------------------------------
          233┆ $ECHO "DNS addresses:      Supplied by ISP's server"
            ⋮┆----------------------------------------
          235┆ $ECHO "Primary DNS:        $DNS1"
            ⋮┆----------------------------------------
          237┆ $ECHO "Secondary DNS:      $DNS2"
            ⋮┆----------------------------------------
          241┆ $ECHO "DNS:                Do not adjust"
            ⋮┆----------------------------------------
          243┆ $ECHO "Firewalling:        $FIREWALL"
            ⋮┆----------------------------------------
          244┆ $ECHO ""
            ⋮┆----------------------------------------
          267┆ $ECHO "Adjusting $CONFIG"
            ⋮┆----------------------------------------
          269┆ copy $CONFIG $CONFIG-bak
            ⋮┆----------------------------------------
          303┆ $ECHO "** Error modifying $CONFIG"
            ⋮┆----------------------------------------
          304┆ $ECHO "** Quitting"
            ⋮┆----------------------------------------
          310┆ $ECHO "Adjusting /etc/resolv.conf"
            ⋮┆----------------------------------------
          314┆ $ECHO "  (But first backing it up to /etc/resolv.conf-bak)"
            ⋮┆----------------------------------------
          318┆ $ECHO "# MADE-BY-RP-PPPOE" > /etc/resolv.conf
            ⋮┆----------------------------------------
          319┆ $ECHO "nameserver $DNS1" >> /etc/resolv.conf
            ⋮┆----------------------------------------
          321┆ $ECHO "nameserver $DNS2" >> /etc/resolv.conf
            ⋮┆----------------------------------------
          326┆ $ECHO "Adjusting /etc/ppp/pap-secrets and /etc/ppp/chap-secrets"
            ⋮┆----------------------------------------
          328┆ $ECHO "  (But first backing it up to /etc/ppp/pap-secrets-bak)"
            ⋮┆----------------------------------------
          334┆ $ECHO "  (But first backing it up to /etc/ppp/chap-secrets-bak)"
            ⋮┆----------------------------------------
          341┆ $ECHO "\"$U\"      *       \"$PWD1\"" >>        
  /etc/ppp/pap-secrets                                         
            ⋮┆----------------------------------------
          343┆ $ECHO "\"$U\"      *       \"$PWD1\"" >>         
  /etc/ppp/chap-secrets                                         
            ⋮┆----------------------------------------
          345┆ $ECHO ""
            ⋮┆----------------------------------------
          346┆ $ECHO ""
            ⋮┆----------------------------------------
          347┆ $ECHO ""
            ⋮┆----------------------------------------
          348┆ $ECHO "Congratulations, it should be all set up!"
            ⋮┆----------------------------------------
          349┆ $ECHO ""
            ⋮┆----------------------------------------
          350┆ $ECHO "Type 'pppoe-start' to bring up your PPPoE link and 'pppoe-stop' to bring"
            ⋮┆----------------------------------------
          351┆ $ECHO "it down.  Type 'pppoe-status' to see the link status."
                                                  
    /logs/firmware/squashfs-root/sbin/pppoe-start 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           42┆ ME=`basename $0`
            ⋮┆----------------------------------------
           45┆ $ECHO "$ME: You must be root to run this script" >& 2
            ⋮┆----------------------------------------
           51┆ $ECHO "*** Running in debug mode... please be patient..."
            ⋮┆----------------------------------------
           54┆ mkdir $DEBUG
            ⋮┆----------------------------------------
           56┆ $ECHO "Could not create directory $DEBUG... exiting"
            ⋮┆----------------------------------------
           62┆ $ECHO "---------------------------------------------" > $DEBUG
            ⋮┆----------------------------------------
           63┆ $ECHO "* The following section contains information about your system" >> $DEBUG
            ⋮┆----------------------------------------
           65┆ $ECHO "Output of uname -a" >> $DEBUG
            ⋮┆----------------------------------------
           67┆ $ECHO "---------------------------------------------" >> $DEBUG
            ⋮┆----------------------------------------
           68┆ $ECHO "* The following section contains information about your network" >> $DEBUG
            ⋮┆----------------------------------------
           69┆ $ECHO "* interfaces.  The one you chose for PPPoE should contain the words:" >> $DEBUG
            ⋮┆----------------------------------------
           70┆ $ECHO "* 'UP' and 'RUNNING'.  If it does not, you probably have an Ethernet" >> $DEBUG
            ⋮┆----------------------------------------
           71┆ $ECHO "* driver problem." >> $DEBUG
            ⋮┆----------------------------------------
           72┆ $ECHO "Output of ifconfig -a" >> $DEBUG
            ⋮┆----------------------------------------
           73┆ $IFCONFIG -a >> $DEBUG
            ⋮┆----------------------------------------
           74┆ $ECHO "---------------------------------------------" >> $DEBUG
            ⋮┆----------------------------------------
           76┆ $ECHO "* The following section contains information about kernel modules" >> $DEBUG
            ⋮┆----------------------------------------
           77┆ $ECHO "* If the module for your Ethernet card is 'tulip', you might" >> $DEBUG
            ⋮┆----------------------------------------
           78┆ $ECHO "* want to look for an updated version at http://www.scyld.com" >> $DEBUG
            ⋮┆----------------------------------------
           79┆ $ECHO "Output of lsmod" >> $DEBUG
            ⋮┆----------------------------------------
           81┆ $ECHO "---------------------------------------------" >> $DEBUG
            ⋮┆----------------------------------------
           83┆ $ECHO "* The following section lists your routing table." >> $DEBUG
            ⋮┆----------------------------------------
           84┆ $ECHO "* If you have an entry which starts with '0.0.0.0', you probably" >> $DEBUG
            ⋮┆----------------------------------------
           85┆ $ECHO "* have defined a default route and gateway, and pppd will" >> $DEBUG
            ⋮┆----------------------------------------
           86┆ $ECHO "* not create a default route using your ISP.  Try getting" >> $DEBUG
            ⋮┆----------------------------------------
           87┆ $ECHO "* rid of this route." >> $DEBUG
            ⋮┆----------------------------------------
           88┆ $ECHO "Output of netstat -n -r" >> $DEBUG
            ⋮┆----------------------------------------
           90┆ $ECHO "---------------------------------------------" >> $DEBUG
            ⋮┆----------------------------------------
           91┆ $ECHO "Contents of /etc/resolv.conf" >> $DEBUG
            ⋮┆----------------------------------------
           92┆ $ECHO "* The following section lists DNS setup." >> $DEBUG
            ⋮┆----------------------------------------
           93┆ $ECHO "* If you can browse by IP address, but not name, suspect" >> $DEBUG
            ⋮┆----------------------------------------
           94┆ $ECHO "* a DNS problem." >> $DEBUG
            ⋮┆----------------------------------------
           96┆ $ECHO "---------------------------------------------" >> $DEBUG
            ⋮┆----------------------------------------
           97┆ $ECHO "* The following section lists /etc/ppp/options." >> $DEBUG
            ⋮┆----------------------------------------
           98┆ $ECHO "* You should have NOTHING in that file." >> $DEBUG
            ⋮┆----------------------------------------
           99┆ $ECHO "Contents of /etc/ppp/options" >> $DEBUG
            ⋮┆----------------------------------------
          101┆ $ECHO "---------------------------------------------" >> $DEBUG
            ⋮┆----------------------------------------
          117┆ $ECHO "$ME: Cannot read configuration file '$CONFIG'" >& 2
            ⋮┆----------------------------------------
          121┆ . $CONFIG
            ⋮┆----------------------------------------
          135┆ kill -0 $PID > /dev/null 2>&1
            ⋮┆----------------------------------------
          137┆ $ECHO "$ME: There already seems to be a PPPoE connection up (PID $PID)" >& 2
            ⋮┆----------------------------------------
          148┆ $CONNECT "$@"
            ⋮┆----------------------------------------
          152┆ $CONNECT "$@" > /dev/null 2>&1 &
            ⋮┆----------------------------------------
          167┆ ${exec_prefix}/sbin/pppoe-status $CONFIG > /dev/null 2>&1
            ⋮┆----------------------------------------
          172┆ tty -s && $ECHO " Connected!"
            ⋮┆----------------------------------------
          181┆ sleep $CONNECT_POLL
            ⋮┆----------------------------------------
          182┆ TIME=`expr $TIME + $CONNECT_POLL`
            ⋮┆----------------------------------------
          188┆ $ECHO "TIMED OUT" >& 2
            ⋮┆----------------------------------------
          190┆ kill $CONNECT_PID > /dev/null 2>&1
                                                   
    /logs/firmware/squashfs-root/sbin/pppoe-status 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           36┆ . $CONFIG
            ⋮┆----------------------------------------
           66┆ PID=`cat $i`
            ⋮┆----------------------------------------
           68┆ IF=`basename $i .pid`
            ⋮┆----------------------------------------
           76┆ /sbin/ifconfig $IF
                                                 
    /logs/firmware/squashfs-root/sbin/pppoe-stop 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           27┆ ME="`basename $0`"
            ⋮┆----------------------------------------
           39┆ . $CONFIG
            ⋮┆----------------------------------------
           55┆ PID=`cat $PIDFILE`
            ⋮┆----------------------------------------
           58┆ kill -0 $PID > /dev/null 2>&1
            ⋮┆----------------------------------------
           66┆ $LOGGER -p daemon.notice "Killing pppd"
            ⋮┆----------------------------------------
           68┆ kill $PPPD_PID > /dev/null 2>&1 || exit 1
            ⋮┆----------------------------------------
           72┆ PIDS=`cat $STARTPID`
            ⋮┆----------------------------------------
           73┆ kill -0 $PIDS > /dev/null 2>&1
            ⋮┆----------------------------------------
           75┆ $LOGGER -p daemon.notice "Killing pppoe-connect"
            ⋮┆----------------------------------------
           76┆ kill $PIDS > /dev/null 2>&1
            ⋮┆----------------------------------------
           80┆ $LOGGER -p daemon.notice "Killing pppoe-connect"
            ⋮┆----------------------------------------
           82┆ kill -9 $PID > /dev/null 2>&1
            ⋮┆----------------------------------------
           87┆ kill -9 $PPPD_PID > /dev/null 2>&1 || exit 1
                                                                 
    /logs/firmware/squashfs-root/usr/share/udhcpc/default.script 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           13┆ ifconfig $interface $ip $BROADCAST $NETMASK up
            ⋮┆----------------------------------------
           26┆ route add default gw $i dev $interface metric 10
            ⋮┆----------------------------------------
           34┆ [ -n "$domain" ] && echo domain $domain >> $RESOLV_CONF
            ⋮┆----------------------------------------
           37┆ echo adding dns $i
            ⋮┆----------------------------------------
           38┆ echo nameserver $i >> $RESOLV_CONF
            ⋮┆----------------------------------------
           45┆ ifconfig $interface up
                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Partially scanned: 2 files only partially analyzed due to parsing or internal Semgrep errors

Ran 7 rules on 54 files: 395 findings.


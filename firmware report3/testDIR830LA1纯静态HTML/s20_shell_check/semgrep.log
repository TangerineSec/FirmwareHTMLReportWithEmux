               
               
┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 1013 files tracked by git with 7 Code rules:
  Scanning 48 files with 7 bash rules.
                    
                    
┌──────────────────┐
│ 99 Code Findings │
└──────────────────┘
                                        
    /logs/firmware/squashfs-root/bin/dw 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ echo read $1 4 > /proc/rtl865x/memory
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
            9┆ echo read $1 `expr $2 \* $a` > /proc/rtl865x/memory
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            9┆ echo read $1 `expr $2 \* $a` > /proc/rtl865x/memory
            ⋮┆----------------------------------------
            9┆ echo read $1 `expr $2 \* $a` > /proc/rtl865x/memory
                                        
    /logs/firmware/squashfs-root/bin/ew 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ echo write $1 $2 > /proc/rtl865x/memory
                                            
    /logs/firmware/squashfs-root/bin/getmib 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 get_mib $1
                                             
    /logs/firmware/squashfs-root/bin/getmib1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 get_mib $1
                                        
    /logs/firmware/squashfs-root/bin/ib 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 read_reg b,$1
                                         
    /logs/firmware/squashfs-root/bin/ib1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 read_reg b,$1
                                         
    /logs/firmware/squashfs-root/bin/id1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 read_reg dw,$1
                                         
    /logs/firmware/squashfs-root/bin/idd 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 read_reg dw,$1
                                          
    /logs/firmware/squashfs-root/bin/idd1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 read_reg dw,$1
                                         
    /logs/firmware/squashfs-root/bin/irf 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 read_rf $1,$2
                                          
    /logs/firmware/squashfs-root/bin/irf1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 read_rf $1,$2
                                        
    /logs/firmware/squashfs-root/bin/iw 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 read_reg w,$1
                                         
    /logs/firmware/squashfs-root/bin/iw1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 read_reg w,$1
                                              
    /logs/firmware/squashfs-root/bin/mmd_cmdr 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            7┆ echo read $1 $2 $3 > /proc/rtl865x/mmd
                                              
    /logs/firmware/squashfs-root/bin/mmd_cmdw 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            7┆ echo write $1 $2 $3 $4 > /proc/rtl865x/mmd
                                        
    /logs/firmware/squashfs-root/bin/ob 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 write_reg b,$1,$2
                                         
    /logs/firmware/squashfs-root/bin/ob1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 write_reg b,$1,$2
                                        
    /logs/firmware/squashfs-root/bin/od 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 write_reg dw,$1,$2
                                         
    /logs/firmware/squashfs-root/bin/od1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 write_reg dw,$1,$2
                                         
    /logs/firmware/squashfs-root/bin/orf 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 write_rf $1,$2,$3
                                          
    /logs/firmware/squashfs-root/bin/orf1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 write_rf $1,$2,$3
                                        
    /logs/firmware/squashfs-root/bin/ow 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 write_reg w,$1,$2
                                         
    /logs/firmware/squashfs-root/bin/ow1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 write_reg w,$1,$2
                                          
    /logs/firmware/squashfs-root/bin/phyr 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            7┆ echo extRead $1 $2 $3 > /proc/rtl865x/phyReg
                                          
    /logs/firmware/squashfs-root/bin/phyw 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ echo extWrite $1 $2 $3 $4 > /proc/rtl865x/phyReg
                                          
    /logs/firmware/squashfs-root/bin/rssi 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            4┆ iwpriv wlan0 set_mib rssi_dump=$1
                                           
    /logs/firmware/squashfs-root/bin/rssi1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            4┆ iwpriv wlan1 set_mib rssi_dump=$1
                                                      
    /logs/firmware/squashfs-root/bin/samba_add_dir.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           14┆ echo "
           15┆ ["$1"]
           16┆ path = "$2"
           17┆ #valid users = "$ALLOWUSERS"
           18┆ browseable = yes
           19┆ writable = yes
           20┆ create mask = 0777
           21┆ directory mask = 0777
           22┆ guest ok = yes" >> $SAMBA_FILE
                                                                 
    /logs/firmware/squashfs-root/bin/script_check_l2tp_status.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            3┆ sysconf check_l2tp_status $*
                                            
    /logs/firmware/squashfs-root/bin/setmib 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan0 set_mib $1=$2
                                             
    /logs/firmware/squashfs-root/bin/setmib1 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            6┆ iwpriv wlan1 set_mib $1=$2
                                                  
    /logs/firmware/squashfs-root/bin/usb_mount.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
            4┆ insmod /lib/modules/$(uname -r)/kernel/drivers/usb/storage/usb-storage.ko
                                                       
    /logs/firmware/squashfs-root/etc/rdnssd/merge-hook 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           34┆ RDNSS_LIMIT=$(($MAXNS - 1))
            ⋮┆----------------------------------------
           49┆ nnsv4=`grep -c "$RE_NSV4" $resolvconf || [ $? -le 1 ]`
            ⋮┆----------------------------------------
           50┆ room=$(($MAXNS - $nnsv4))
            ⋮┆----------------------------------------
           64┆ mv -f $resolvconf.tmp $resolvconf
                                                 
    /logs/firmware/squashfs-root/sbin/bulkled.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           35┆ ./bulkled.sh $1 0;
            ⋮┆----------------------------------------
           38┆ ./bulkled.sh $1 0;
            ⋮┆----------------------------------------
           41┆ ./bulkled.sh $1 0;
            ⋮┆----------------------------------------
           44┆ ./bulkled.sh $1 0;
            ⋮┆----------------------------------------
           52┆ ./bulkled.sh $1 0;echo 1;;
            ⋮┆----------------------------------------
           54┆ ./bulkled.sh $1 0;
            ⋮┆----------------------------------------
           57┆ ./bulkled.sh $1 0;
            ⋮┆----------------------------------------
           60┆ ./bulkled.sh $1 0;
            ⋮┆----------------------------------------
           74┆ ./bulkled.sh $1 0;echo 1;;
            ⋮┆----------------------------------------
           87┆ ./bulkled.sh $1 2;echo 3;;
                                                    
    /logs/firmware/squashfs-root/sbin/dhcp6c-script 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            8┆ IAPD_PRE=$(cat $PREVIOUS_IAPD)
            ⋮┆----------------------------------------
           15┆ rm -f $RESOLV_IPV6
            ⋮┆----------------------------------------
           20┆ echo nameserver $nameserver >> $RESOLV_IPV6
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-command-substitution-in-command          
          The result of command substitution $(...) or `...`, if unquoted, is split on whitespace or  
          other separators specified by the IFS variable. You should surround it with double quotes to
          avoid splitting the result.                                                                 
                                                                                                      
           63┆ ip -6 route del $(cat $DHCP_PD_OLD | sed -n '1p')/$(cat $DHCP_PD_OLD | sed -n '2p') dev lo
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           63┆ ip -6 route del $(cat $DHCP_PD_OLD | sed -n '1p')/$(cat $DHCP_PD_OLD | sed -n '2p') dev lo
            ⋮┆----------------------------------------
           63┆ ip -6 route del $(cat $DHCP_PD_OLD | sed -n '1p')/$(cat $DHCP_PD_OLD | sed -n '2p') dev lo
            ⋮┆----------------------------------------
           79┆ cp $DHCP_PD $DHCP_PD_OLD
                                                           
    /logs/firmware/squashfs-root/sbin/dhcp_discover.script 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            4┆ app_sync 1047 0 $RET
                                                 
    /logs/firmware/squashfs-root/sbin/fw_upgrade 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            3┆ tar -xf $1 -C /mydlink/
                                                  
    /logs/firmware/squashfs-root/sbin/mdb_test.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
            4┆ rm -rf $TEST_RESULT
            ⋮┆----------------------------------------
           34┆ echo $PATH | grep mydlink
            ⋮┆----------------------------------------
           45┆ ls $libPath_1 | grep libssl
            ⋮┆----------------------------------------
           47┆ ls $libPath_1 | grep libcrypto
            ⋮┆----------------------------------------
           54┆ ls $libPath_2 | grep libssl
            ⋮┆----------------------------------------
           56┆ ls $libPath_2 | grep libcrypto
            ⋮┆----------------------------------------
           68┆ ls $libPath_1 | grep libpthread
            ⋮┆----------------------------------------
           72┆ ls $libPath_2 | grep libpthread
            ⋮┆----------------------------------------
[32m       external.semgrep-rules.bash.lang.security.ifs-tampering                                      [0m
          The special variable IFS affects how splitting takes place when expanding unquoted        
          variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you
          need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS="," read
          -a my_array'.                                                                             
                                                                                                    
           84┆ IFS=":"
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           89┆ ls $word | grep reboot
            ⋮┆----------------------------------------
[32m       external.semgrep-rules.bash.lang.security.ifs-tampering                                      [0m
          The special variable IFS affects how splitting takes place when expanding unquoted        
          variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you
          need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS="," read
          -a my_array'.                                                                             
                                                                                                    
          101┆ IFS=":"
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          105┆ ls $word | grep killall
            ⋮┆----------------------------------------
[32m       external.semgrep-rules.bash.lang.security.ifs-tampering                                      [0m
          The special variable IFS affects how splitting takes place when expanding unquoted        
          variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you
          need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS="," read
          -a my_array'.                                                                             
                                                                                                    
          117┆ IFS=":"
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          122┆ ls $word | grep factory_reset
            ⋮┆----------------------------------------
[32m       external.semgrep-rules.bash.lang.security.ifs-tampering                                      [0m
          The special variable IFS affects how splitting takes place when expanding unquoted        
          variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you
          need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS="," read
          -a my_array'.                                                                             
                                                                                                    
          134┆ IFS=":"
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          139┆ ls $word | grep fw_upgrade
            ⋮┆----------------------------------------
[32m       external.semgrep-rules.bash.lang.security.ifs-tampering                                      [0m
          The special variable IFS affects how splitting takes place when expanding unquoted        
          variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you
          need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS="," read
          -a my_array'.                                                                             
                                                                                                    
          151┆ IFS=":"
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          156┆ ls $word | grep sed
            ⋮┆----------------------------------------
[32m       external.semgrep-rules.bash.lang.security.ifs-tampering                                      [0m
          The special variable IFS affects how splitting takes place when expanding unquoted        
          variables. Don't set it globally. Prefer a dedicated utility such as 'cut' or 'awk' if you
          need to split input data. If you must use 'read', set IFS locally using e.g. 'IFS="," read
          -a my_array'.                                                                             
                                                                                                    
          167┆ IFS=""
            ⋮┆----------------------------------------
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
          202┆ mdb set admin_passwd $testPasswd 2>/dev/null
            ⋮┆----------------------------------------
          214┆ mdb set admin_passwd $OLD_PASSWD
            ⋮┆----------------------------------------
          255┆ mdb set register_st $REG
            ⋮┆----------------------------------------
          414┆ mdb set time ${NEW_TIME}
            ⋮┆----------------------------------------
          423┆ mdb set time $OLD_TIME
            ⋮┆----------------------------------------
          442┆ mdb set wan_mode ${swap} 2>&1 >/dev/null
            ⋮┆----------------------------------------
          449┆ mdb set wan_mode $WAN_TMP
            ⋮┆----------------------------------------
          472┆ mdb set static_ip_info ${EXPECT}
            ⋮┆----------------------------------------
          479┆ mdb set static_ip_info $MY_STATIC_IP
            ⋮┆----------------------------------------
          488┆ mdb set wan_mode $WAN_TMP
                                                           
    /logs/firmware/squashfs-root/sbin/mydlink-watch-dog.sh 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           10┆ num=`ps | grep /mydlink/$1 | grep -v grep -c`
            ⋮┆----------------------------------------
           16┆ pid=`ps | grep /mydlink/$1 | grep -v grep | sed 's/^[ \t]*//'  | sed 's/ .*//' `
            ⋮┆----------------------------------------
           20┆ killall -9 $1
            ⋮┆----------------------------------------
           22┆ /mydlink/$1 > /dev/null 2>&1 &
            ⋮┆----------------------------------------
           24┆ /opt/$1 > /dev/null 2>&1 &
                                                
    /logs/firmware/squashfs-root/sbin/opt.local 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           19┆ kill -9 $p
            ⋮┆----------------------------------------
           34┆ kill -9 $p
                                             
    /logs/firmware/squashfs-root/usr/hotplug 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           14┆ kill -USR1 $usbmount2_pid
            ⋮┆----------------------------------------
           18┆ kill -USR2 $usbmount2_pid
                                                                  
    /logs/firmware/squashfs-root/usr/share/udhcpc/ncc_sync.script 
       external.semgrep-rules.bash.lang.correctness.unquoted-variable-expansion-in-command            
          Variable expansions must be double-quoted so as to prevent being split into multiple pieces 
          according to whitespace or whichever separator is specified by the IFS variable. If you     
          really wish to split the variable's contents, you may use a variable that starts with an    
          underscore e.g. $_X instead of $X, and semgrep will ignore it. If what you need is an array,
          consider using a proper bash array.                                                         
                                                                                                      
           39┆ app_sync 1024 0 $ACT $INTERFACE "pid=$PID"
            ⋮┆----------------------------------------
           43┆ app_sync 1024 0 $ACT $INTERFACE $ROUTER $SUBNET $DHCPTYPE $DOMAIN $WINS $DNS $SERVERID $NODETYPE $SCOPE  
  $IP $LEASE $NTPSRV $MASK $TFTP $BOOTFILE $FIXROUTE $FIXR ... [0m                                                      
            [shortened a long line from output, adjust with --max-chars-per-line]
            ⋮┆----------------------------------------
           48┆ app_sync 1046 0 $IPv6_6RD $INTERFACE
                
                
┌──────────────┐
│ Scan Summary │
└──────────────┘

Ran 7 rules on 48 files: 99 findings.


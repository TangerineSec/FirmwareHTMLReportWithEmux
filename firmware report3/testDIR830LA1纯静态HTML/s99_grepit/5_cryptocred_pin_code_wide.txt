[[0;33m*[0m] Searching (args for grep: [0;33m-i[0m) for [0;33mpin.?code[0m.
[[0;33m*[0m] Grepit state info - comment: [0;33mPIN code and variants of it[0m
[[0;33m*[0m] Grepit state info - Filename [0;33m5_cryptocred_pin_code_wide.txt[0m
[[0;33m*[0m] Grepit state info - Example: [0;33mpin code[0m
[[0;33m*[0m] Grepit state info - False positive example: [0;33mFALSE_POSITIVES_EXAMPLE_PLACEHOLDER[0m
[[0;33m*[0m] Grepit state info - Grep args: [0;33m-i[0m
[[0;33m*[0m] Grepit state info - Search regex: [0;33mpin.?code[0m

[35m/logs/firmware/squashfs-root/bin/flash[m[36m-[m[32m268[m[36m-[mwep_key2 = %s
[35m/logs/firmware/squashfs-root/bin/flash[m[36m-[m[32m269[m[36m-[mwep_key3 = %s
[35m/logs/firmware/squashfs-root/bin/flash[m[36m-[m[32m270[m[36m-[mwep_key4 = %s
[35m/logs/firmware/squashfs-root/bin/flash[m[36m:[m[32m271[m[36m:[m[01;31mpin_code[m = %s
[35m/logs/firmware/squashfs-root/bin/flash[m[36m-[m[32m272[m[36m-[mrf_band = %d
[36m--[m
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m24[m[36m-[mB
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m25[m[36m-[mAÂˆLC+4A
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m26[m[36m-[m
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m:[m[32m27[m[36m:[mCH
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m28[m[36m-[m4c<	$'`5JB@$5)$d$
[36m--[m
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m481[m[36m-[m$>$/y$:Dt$?D$Ep$B +r$
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m482[m[36m-[m!'à¯¼<'	!('95 	
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m483[m[36m-[m    Where arguments is optional as:	-c config_filename, config filename, default is %s
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m:[m[32m484[m[36m:[m/var/wscd.conf	-w wlan_interface, wlan interface	-br bridge_interface, lan interface	-fi fifo_name, wlan fifo path name	-method val, 1: PIN, 2: PBC, 3: both	-mode val, 1: ap unconfigured, 2: client unconfigured (enrollee),		3: client configured (registrar), 4: ap-proxy configured, 5: ap-proxy registrar	-upnp val, 1 - support upnp, 0 - not support (default)	-gen-pin, generate [01;31mpin code[m for local entitiy	-peer_pin, assign [01;31mpin code[m for peer entitiy	-local_pin, assign [01;31mpin code[m for local device	-sig_start, start wsc protocol	-sig_pbc, signal PBC mode	-start_pbc, start PBC mode	-daemon, run as daemonioctl(SIOCGIFHWADDR) failed!/proc/%s/sta_infoactive%*[^:]:%[^)]%s-%s.pid/var/run/wscdwlan0-vxd%dwlan1-vxd%s-wlan0-wlan1.pid/var/wlan_state%s LINKiwpriv %s set_mib wsc_enable=3
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m485[m[36m-[m
[36m--[m
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m490[m[36m-[m
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m491[m[36m-[m
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m492[m[36m-[m	AUTO_LOCK_DOWN(unlocked)
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m:[m[32m493[m[36m:[mwlan_fifo0wlan_fifo1modemanual_configupnpuse_ieconfig_methodEAP_Frag_Len_THProbeReq_wscIE_fragProbeRsp_wscIE_fragExtension_Tag_test[01;31mpin_code[mrf_bandssidwlan0_wsc_disabledwlan1_wsc_disabledssid2auth_type2encrypt_type2mixedmode2wep_transmit_key2network_key2wep_key22wep_key32wep_key42auth_typeauth_type_flagsencrypt_typeencrypt_type_flagsmixedmodewep_transmit_keyconnection_typeuuidmodelDescriptionUPCmanufacturermanufacturerURLmodelURLmodel_namemodel_numserial_numdevice_category_iddevice_sub_category_iddevice_ouidevice_namedevice_password_iddisable_configured_by_exRegbutton_hold_timebutton_hold_time_for_first_ifPIN_timeoutSSID_prefixPSK_LEN
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m494[m[36m-[m
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m495[m[36m-[mread PSK_LEN tocken
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m:[m[32m496[m[36m:[mnetwork_keywep_key2wep_key3wep_key4tx_timeoutresent_limitreg_timeoutblock_timeoutWPS_PBC_overlapping_GPIO_numberPBC_overlapping_LED_time_outWPS_END_LED_unconfig_GPIO_numberWPS_END_LED_config_GPIO_numberWPS_START_LED_GPIO_numberNo_ifname_for_flash_setWPS_ERROR_LED_time_outWPS_ERROR_LED_GPIO_numberWPS_SUCCESS_LED_time_outWPS_SUCCESS_LED_GPIO_numberdisable_disconnectdisable_auto_gen_ssidmanual_key_typemanual_keyrandom_key_lendisable_hidden_apconfig_by_ext_regfix_wzc_wepProfileDontBothApplyMaxPinFailThresHoldParameter "mode" must be set!user has intervened unlockMicrosoft/var/wps_done00000000Invalid [01;31mpin_code[m length!/var/wps_start_interface0/var/wps_start_interface1/var/run/wscd-wlan0-vxd.pid/var/run/wscd-wlan1-vxd.pidvxd/tmp/reinit_wscdwscd: init_wlan() failed!wscd: start_upnp() failed!/tmp/wscd_cancelallocate context failed!wlan1-c-both_band_ap-both_vxd_client-w-br-fi-fi2-mode-gen-pinPIN: %s
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m497[m[36m-[m-upnp-peer_pin-local_pin-method-start-sig_starttrigger cmd:wscd -sig_start interface-sig_pbctrigger cmd:wscd -sig_pbc interface-sig_unlocktrigger cmd:wscd -sig_unlock interface-start_pbc-connection_type-ssid-disable_PBC_detection-64decode-daemoninvalid argument - %s
[36m--[m
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m730[m[36m-[mmini_UPnP_UploadXML Out of memory! EXITINGmini_UPnP_UploadXML File length mismatched! EXITING%s = %s
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m731[m[36m-[mInternal Server Errorhttp://purenetworks.com/HNAPInvalid Action<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body><s:Fault><faultcode>s:Client</faultcode><faultstring>UPnPError</faultstring><detail><UPnPError xmlns="urn:schemas-upnp-org:control-1-0"><errorCode>%d</errorCode><errorDescription>%s</errorDescription></UPnPError></detail></s:Fault></s:Body></s:Envelope></s:Body></s:Envelope><?xml version="1.0"?>
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m732[m[36m-[m<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body>Ct
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m:[m[32m733[m[36m:[mm_7O5mmQEä…µvb^~LB7k\8kZ$|KI(fQ[=
[35m/logs/firmware/squashfs-root/bin/wscd[m[36m-[m[32m734[m[36m-[m
[36m--[m
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m-[m[32m3373[m[36m-[mln -sf %s/def_lang_w.js /var/tmp/lang_w.jsget/var/tmp/ddnschk<DdnsCheckResult>%s</DdnsCheckResult>
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m-[m[32m3374[m[36m-[m/opt/release/zoo_2.0/cameo/private/app/ncc2/cgi/ccp/ddns_check.cgoing to do check
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m-[m[32m3375[m[36m-[mddnsHostNameddnsUsernameddnsPasswordqueryWanStatus FALSE
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m:[m[32m3376[m[36m:[m%s -T %d -u %s -p %s -R %s -U %d -P %s/%s_%s.pid -I %s -z %d -1 -m %snoip2/var/rundoCheckgetResultSSID=%s<br>SSID_1=%s<br>KEY=%s<br>KEY_1=%s<br>[01;31mPINCODE[m=%s<br>ADMIN_PWD=%s<br>SN=%s<br>BOARDID=%sunknowokerrno/opt/release/zoo_2.0/cameo/private/app/ncc2/cgi/ccp/drws_api.cinvalid upload , data=%s
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m-[m[32m3377[m[36m-[madmin%s%s//var/tmp/usb%s/%s/%s/%s=%s",fileCnt=%d, getFromFilenames=%d
[36m--[m
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m-[m[32m4122[m[36m-[m-both_band_aprm -rf /var/wps && mkdir /var/wps && cp /etc/simplecfg*.xml /var/wps/etc/wscd.confwlan%d_wsc_disabled = %d
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m-[m[32m4123[m[36m-[mmode = %d
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m-[m[32m4124[m[36m-[mupnp = %d
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m:[m[32m4125[m[36m:[m[01;31mpin_code[m = %s
[35m/logs/firmware/squashfs-root/sbin/ncc2[m[36m-[m[32m4126[m[36m-[mdisable_configured_by_exReg = %d
[36m--[m
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1584[m[36m-[m		var xml_SetWiFiVerifyAlphaResult = HNAP.SetXML("SetWiFiVerifyAlpha", xml_SetWiFiVerifyAlpha);
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1585[m[36m-[m		location.reload();
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1586[m[36m-[m	}
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1587[m[36m:[m	function CheckPIN([01;31mpincode[m)
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1588[m[36m-[m	{
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1589[m[36m:[m		if([01;31mpincode[m.length == 4 && /^[0-9]*$/.test([01;31mpincode[m))
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1590[m[36m:[m			return [01;31mpincode[m;
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1591[m[36m:[m		else if( ([01;31mpincode[m.length == 9 && /[0-9]{4}(\-|\s)[0-9]{4}/.test([01;31mpincode[m))
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1592[m[36m:[m					|| ([01;31mpincode[m.length == 8 && /^[0-9]*$/.test([01;31mpincode[m)) )
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1593[m[36m-[m		{
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1594[m[36m:[m			if([01;31mpincode[m[4] == "\-")
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1595[m[36m-[m			{
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1596[m[36m:[m				var [01;31mpincode[msplit=[01;31mpincode[m.split("\-");
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1597[m[36m:[m				[01;31mpincode[m=[01;31mpincode[msplit[0]+[01;31mpincode[msplit[1];
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1598[m[36m-[m			}
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1599[m[36m:[m			else if([01;31mpincode[m[4] == " ")
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1600[m[36m-[m			{
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1601[m[36m:[m				var [01;31mpincode[msplit=[01;31mpincode[m.split(" ");
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1602[m[36m:[m				[01;31mpincode[m=[01;31mpincode[msplit[0]+[01;31mpincode[msplit[1];
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1603[m[36m-[m			}
[36m--[m
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1606[m[36m-[m			var pow=3;
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1607[m[36m-[m			for(var i=0; i<8;i++)
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1608[m[36m-[m			{
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1609[m[36m:[m				sum = pow * [01;31mpincode[m.charAt(i) + sum;
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1610[m[36m-[m				if (pow==3)	pow=1;
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1611[m[36m-[m				else	pow=3;
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1612[m[36m-[m			}
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1613[m[36m-[m			if ((sum%10) == 0)
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1614[m[36m:[m				return [01;31mpincode[m;
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1615[m[36m-[m			else
[36m--[m
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1620[m[36m-[m	}
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1621[m[36m-[m	function Conn_PIN_Client()
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1622[m[36m-[m	{
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1623[m[36m:[m		var [01;31mpincode[m = CheckPIN(document.getElementById("pin_num").value);
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1624[m[36m:[m		if ([01;31mpincode[m)
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1625[m[36m-[m		{
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1626[m[36m-[m			var xml_SetWiFiVerifyAlpha = HNAP.GetXML("SetWiFiVerifyAlpha");
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1627[m[36m:[m			xml_SetWiFiVerifyAlpha.Set("SetWiFiVerifyAlpha/WPS/WPSPIN",[01;31mpincode[m);
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1628[m[36m-[m			var xml_SetWiFiVerifyAlphaResult = HNAP.SetXML("SetWiFiVerifyAlpha", xml_SetWiFiVerifyAlpha);
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1629[m[36m-[m		}
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1630[m[36m-[m		else
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m:[m[32m1631[m[36m:[m			alert("Invalid [01;31mPIN code[m!");
[35m/logs/firmware/squashfs-root/www/WiFi.html[m[36m-[m[32m1632[m[36m-[m	}
[36m--[m
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m-[m[32m625[m[36m-[m				var pin_status = null;
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m-[m[32m626[m[36m-[m				if(pinsts=="UNLOCKED") { pin_status = "Unlocked"; }
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m-[m[32m627[m[36m-[m				else if(pinsts=="READY") { pin_status = "Ready"; }
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m:[m[32m628[m[36m:[m				else if(pinsts=="ERROR") { pin_status = "[01;31mPIN code[m error"; }
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m-[m[32m629[m[36m-[m				else if(pinsts=="NOSUPPORT") { pin_status = "No support"; }
[36m--[m
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m-[m[32m732[m[36m-[m						var pin_status = null;
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m-[m[32m733[m[36m-[m						if(pinsts=="UNLOCKED") { pin_status = "Unlocked"; }
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m-[m[32m734[m[36m-[m						else if(pinsts=="READY") { pin_status = "Ready"; }
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m:[m[32m735[m[36m:[m						else if(pinsts=="ERROR") { pin_status = "[01;31mPIN code[m error"; }
[35m/logs/firmware/squashfs-root/www/Internet_ProAdd.html[m[36m-[m[32m736[m[36m-[m						else if(pinsts=="NOSUPPORT") { pin_status = "No support"; }

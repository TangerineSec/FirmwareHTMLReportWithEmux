
-----------------------------------------------------------------

[[0;33m*[0m] Emulating binary name: [0;33mepi_ttcp.svn-base[0m
[[0;33m*[0m] Emulator used: [0;33mqemu-arm-static[0m
[[0;33m*[0m] Using root directory: [0;33m/logs/s115_usermode_emulator/firmware/squashfs-root[0m ([0;33m1/1[0m)
[[0;33m*[0m] Using CPU config: [0;33mNONE[0m
[[0;33m*[0m] Emulating binary: [0;33m/usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m

[[0;33m*[0m] Emulating binary [0;33m./usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m with parameter [0;33mNONE[0m
ttcp-r: buflen=8192, nbuf=2048, align=16384/0, port=5010
sockbufsndsize=16384, sockbufrcvsize=131072, sockbufsize=73728, 
# tcp receiver #
[[0;33m*[0m] Emulating binary [0;33m./usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m with parameter [0;33m-v[0m
ttcp-r: buflen=8192, nbuf=2048, align=16384/0, port=5010
ttcp-r: bind: Address already in use
ttcp-r: errno=98
ttcp-r: start time Wed Jan 10 21:52:06 2024
ttcp-r: File-Descriptor 0x3 Opened
[[0;33m*[0m] Emulating binary [0;33m./usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m with parameter [0;33m-V[0m
ttcp.c $- CERN Revision: 3.8 (dev level) -$ Epigram 15-jul-98
[[0;33m*[0m] Emulating binary [0;33m./usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m with parameter [0;33m-h[0m
 Details about the reply: 
   Example: 
   ttcp-t: buflen=8192, nbuf=100, align=16384/0, port=5010
   ttcp-t: File-Descriptor 0x4 Opened
   # tcp sender -> <host> #
   ttcp-t: 819200 bytes in 1.152557 real seconds = 694.109 KB/sec +++
   ttcp-t: 100 I/O calls, 11.526 msec(real)/call, 0.213 msec(cpu)/call
   ttcp-t: 0.001914user 0.019388sys 0:01real 1        0+58d 190maxrss 1+2pf 177+180csw
   ttcp-t: buffer address 0x28000
   ttcp-t: File-Descriptor  fd 0x4 Closed
   ttcp done.

cpu seconds  ==  (sec) elapse ru_utime + elapse ru_stime.
                 ru_utime == The total amount of time running in user mode.
                 ru_stime == The total amount of time spent in the system.
                             executing on behalf of the process.
real seconds ==  elapse time calculated by the system timer (date).
I/O calls    ==  I/O call to the driver.
msec/call    ==  average elapse time (Real seconds) between each I/O.
calls/sec    ==  invert of msec/call.
user         ==  (sec.msec) elaspe ru_utime.
sys          ==  (sec.msec) elapse ru_stime.
real         ==  (min:sec)  CPU seconds.
%           ==  Real seconds / CPU seconds.
(ru_ixrss)i+(ru_idrss)d
             ru_ixrss  == An integral value indicating the amount of memory 
                          used by the text segment that was also shared among
                          other processes. This value is expressed in units of
                          kilobytes * seconds-of-execution and is calculated 
                          by adding the number of shared memory pages in use 
                          each time the internal system clock ticks, and then
                          averaging over one-second intervals.
             ru_idrss  == An integral value of the amount of unshared memory 
                          in the data segment of a process (expressed in 
                          units of kilobytes * seconds-of-execution).
  (ru_maxrss/2)maxrss.
             ru_maxrss == The maximum size, in kilobytes, of the used
                          resident set size. 
  (ru_majflt)+(ru_minflt)pf : Page fault
             ru_majflt == The number of page faults serviced that required
                          I/O activity.
             ru_minflt == The number of page faults serviced without any
                          I/O activity. In this case, I/O activity is 
                          avoided by reclaiming a page frame from the list 
                          of pages awaiting reallocation. 
(ru_nvcsw)+(ru_nivcsw)csw : context switch
             ru_nvcsw  == The number of times a context switch resulted 
                          because a process voluntarily gave up the 
                          processor before its time slice was completed. 
                          This usually occurs while the process waits 
                          for availability of a resource.
             ru_nivcsw == The number of times a context switch resulted 
                          because a higher priority process ran or because
                          the current process exceeded its time slice.

)
         nbytes(byte), realt(sec), rate(MB/sec), I/O call,
                 hours*3600+min*60+sec

[[0;33m*[0m] Emulating binary [0;33m./usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m with parameter [0;33m-help[0m
 Details about the reply: 
   Example: 
   ttcp-t: buflen=8192, nbuf=100, align=16384/0, port=5010
   ttcp-t: File-Descriptor 0x4 Opened
   # tcp sender -> <host> #
   ttcp-t: 819200 bytes in 1.152557 real seconds = 694.109 KB/sec +++
   ttcp-t: 100 I/O calls, 11.526 msec(real)/call, 0.213 msec(cpu)/call
   ttcp-t: 0.001914user 0.019388sys 0:01real 1        0+58d 190maxrss 1+2pf 177+180csw
   ttcp-t: buffer address 0x28000
   ttcp-t: File-Descriptor  fd 0x4 Closed
   ttcp done.

cpu seconds  ==  (sec) elapse ru_utime + elapse ru_stime.
                 ru_utime == The total amount of time running in user mode.
                 ru_stime == The total amount of time spent in the system.
                             executing on behalf of the process.
real seconds ==  elapse time calculated by the system timer (date).
I/O calls    ==  I/O call to the driver.
msec/call    ==  average elapse time (Real seconds) between each I/O.
calls/sec    ==  invert of msec/call.
user         ==  (sec.msec) elaspe ru_utime.
sys          ==  (sec.msec) elapse ru_stime.
real         ==  (min:sec)  CPU seconds.
%           ==  Real seconds / CPU seconds.
(ru_ixrss)i+(ru_idrss)d
             ru_ixrss  == An integral value indicating the amount of memory 
                          used by the text segment that was also shared among
                          other processes. This value is expressed in units of
                          kilobytes * seconds-of-execution and is calculated 
                          by adding the number of shared memory pages in use 
                          each time the internal system clock ticks, and then
                          averaging over one-second intervals.
             ru_idrss  == An integral value of the amount of unshared memory 
                          in the data segment of a process (expressed in 
                          units of kilobytes * seconds-of-execution).
  (ru_maxrss/2)maxrss.
             ru_maxrss == The maximum size, in kilobytes, of the used
                          resident set size. 
  (ru_majflt)+(ru_minflt)pf : Page fault
             ru_majflt == The number of page faults serviced that required
                          I/O activity.
             ru_minflt == The number of page faults serviced without any
                          I/O activity. In this case, I/O activity is 
                          avoided by reclaiming a page frame from the list 
                          of pages awaiting reallocation. 
(ru_nvcsw)+(ru_nivcsw)csw : context switch
             ru_nvcsw  == The number of times a context switch resulted 
                          because a process voluntarily gave up the 
                          processor before its time slice was completed. 
                          This usually occurs while the process waits 
                          for availability of a resource.
             ru_nivcsw == The number of times a context switch resulted 
                          because a higher priority process ran or because
                          the current process exceeded its time slice.

)
         nbytes(byte), realt(sec), rate(MB/sec), I/O call,
                 hours*3600+min*60+sec

[[0;33m*[0m] Emulating binary [0;33m./usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m with parameter [0;33m--help[0m
./usr/sbin/.svn/text-base/epi_ttcp.svn-base: invalid option -- -
  Usage: ttcp -t [-options] host [ < in ]    ttcp -r [-options > out]
Example: ttcp -t -s -v -n100 host            ttcp -r -s -v -n100
Common options:
    -V      prints version number and date of last modification
    -L      create and append all results to a file named ttcp_log
    -h      more help
    -l ##   length of bufs read from or written to network (default 8192,
            max 65535)
    -u      use UDP instead of TCP
    -p ##   port number to send to or listen at (default 5010)
    -P ##   link-layer priority (default 0)
    -s      (ttcp -t) : source a pattern to network
            (ttcp -r) : sink (discard) all data from network
    -A ##   align the start of buffers to this modulus (default 16384)
    -O ##   start buffers at this offset from the modulus (default 0)
    -v      verbose: print more statistics
    -d      set SO_DEBUG socket option
    -b ##   set socket buffer size (if supported)
    -f X    format for rate: b,B = bits, bytes k,K = kilo{bits,bytes};
                             m,M = mega{bits,bytes}; g,G = giga{bits,bytes}
    -w ##   set timeout value (in milliseconds) to exit if no receive data or tcp connect
Options specific to (ttcp -t) :
    -n ##   number of source bufs written to network (default 2048)
    -x      use random data in tcp/udp frames (-I provides seed)
    -D      don't buffer TCP writes (sets TCP_NODELAY socket option)
    -H      print hash marks to indicate progress, one per buffer
    -# ##   number of buffers to send between hash marks (implies -H)
    -I      init/seed value for RNG when sending random size bufs (default 1)
    -N ##   number of source bufs per burst, i.e between sleeps (default 1)
    -R ##   send random size buffers with minimum size specified, max size
            is value of -l option
    -S ##   millisecs between bursts (10ms resolution)
Options specific to (ttcp -r) :
    -B      for -s, only output full blocks as specified by -l (for TAR)
    -T      "touch": access each byte as it's read
    -i      report information on out of order sequence numbers
[[0;33m*[0m] Emulating binary [0;33m./usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m with parameter [0;33m--version[0m
./usr/sbin/.svn/text-base/epi_ttcp.svn-base: invalid option -- -
  Usage: ttcp -t [-options] host [ < in ]    ttcp -r [-options > out]
Example: ttcp -t -s -v -n100 host            ttcp -r -s -v -n100
Common options:
    -V      prints version number and date of last modification
    -L      create and append all results to a file named ttcp_log
    -h      more help
    -l ##   length of bufs read from or written to network (default 8192,
            max 65535)
    -u      use UDP instead of TCP
    -p ##   port number to send to or listen at (default 5010)
    -P ##   link-layer priority (default 0)
    -s      (ttcp -t) : source a pattern to network
            (ttcp -r) : sink (discard) all data from network
    -A ##   align the start of buffers to this modulus (default 16384)
    -O ##   start buffers at this offset from the modulus (default 0)
    -v      verbose: print more statistics
    -d      set SO_DEBUG socket option
    -b ##   set socket buffer size (if supported)
    -f X    format for rate: b,B = bits, bytes k,K = kilo{bits,bytes};
                             m,M = mega{bits,bytes}; g,G = giga{bits,bytes}
    -w ##   set timeout value (in milliseconds) to exit if no receive data or tcp connect
Options specific to (ttcp -t) :
    -n ##   number of source bufs written to network (default 2048)
    -x      use random data in tcp/udp frames (-I provides seed)
    -D      don't buffer TCP writes (sets TCP_NODELAY socket option)
    -H      print hash marks to indicate progress, one per buffer
    -# ##   number of buffers to send between hash marks (implies -H)
    -I      init/seed value for RNG when sending random size bufs (default 1)
    -N ##   number of source bufs per burst, i.e between sleeps (default 1)
    -R ##   send random size buffers with minimum size specified, max size
            is value of -l option
    -S ##   millisecs between bursts (10ms resolution)
Options specific to (ttcp -r) :
    -B      for -s, only output full blocks as specified by -l (for TAR)
    -T      "touch": access each byte as it's read
    -i      report information on out of order sequence numbers
[[0;33m*[0m] Emulating binary [0;33m./usr/sbin/.svn/text-base/epi_ttcp.svn-base[0m with parameter [0;33mversion[0m

-----------------------------------------------------------------

ttcp-r: buflen=8192, nbuf=2048, align=16384/0, port=5010
ttcp-r: bind: Address already in use
ttcp-r: errno=98

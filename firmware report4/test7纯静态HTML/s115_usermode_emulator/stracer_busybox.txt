
-----------------------------------------------------------------

[[0;33m*[0m] Initial strace run with [0;33mjchroot[0m on the command [0;33m./bin/busybox[0m to identify missing areas

[[0;33m*[0m] Emulating binary name: [0;33mbusybox[0m in [0;33mstrace[0m mode to identify missing areas (with [0;33mjchroot[0m)
[[0;33m*[0m] Emulator used: [0;33mqemu-arm-static[0m
[[0;33m*[0m] Chroot environment used: [0;33mjchroot[0m
[[0;33m*[0m] Using root directory: [0;33m/logs/s115_usermode_emulator/firmware/squashfs-root[0m ([0;33m1/1[0m)
[[0;33m*[0m] Using CPU config: [0;33mNONE[0m

1 mmap2(NULL,4096,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_ANONYMOUS|MAP_UNINITIALIZED,-1,0) = 0x40810000
1 open("/lib/libcrypt.so.0",O_RDONLY) = 3
1 fstat(3,0x40702ea0) = 0
1 mmap2(NULL,4096,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_ANONYMOUS|MAP_UNINITIALIZED,-1,0) = 0x40811000
1 read(3,0x40811000,4096) = 4096
1 mmap2(NULL,118784,PROT_NONE,MAP_PRIVATE|MAP_ANONYMOUS,-1,0) = 0x40812000
1 mmap2(0x40812000,8948,PROT_EXEC|PROT_READ,MAP_PRIVATE|MAP_FIXED,3,0) = 0x40812000
1 mmap2(0x4081c000,4096,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_FIXED,3,0x2) = 0x4081c000
1 mmap2(0x4081d000,70248,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_ANONYMOUS|MAP_FIXED,-1,0) = 0x4081d000
1 close(3) = 0
1 munmap(0x40811000,4096) = 0
1 open("/lib/libm.so.0",O_RDONLY) = 3
1 fstat(3,0x40702e90) = 0
1 mmap2(NULL,4096,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_ANONYMOUS|MAP_UNINITIALIZED,-1,0) = 0x40811000
1 read(3,0x40811000,4096) = 4096
1 mmap2(NULL,102400,PROT_NONE,MAP_PRIVATE|MAP_ANONYMOUS,-1,0) = 0x4082f000
1 mmap2(0x4082f000,61388,PROT_EXEC|PROT_READ,MAP_PRIVATE|MAP_FIXED,3,0) = 0x4082f000
1 mmap2(0x40846000,4100,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_FIXED,3,0xf) = 0x40846000
1 close(3) = 0
1 munmap(0x40811000,4096) = 0
1 open("/lib/libgcc_s.so.1",O_RDONLY) = 3
1 fstat(3,0x40702e80) = 0
1 mmap2(NULL,4096,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_ANONYMOUS|MAP_UNINITIALIZED,-1,0) = 0x40811000
1 read(3,0x40811000,4096) = 4096
1 mmap2(NULL,73728,PROT_NONE,MAP_PRIVATE|MAP_ANONYMOUS,-1,0) = 0x40848000
1 mmap2(0x40848000,39128,PROT_EXEC|PROT_READ,MAP_PRIVATE|MAP_FIXED,3,0) = 0x40848000
1 mmap2(0x40859000,2800,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_FIXED,3,0x9) = 0x40859000
1 close(3) = 0
1 munmap(0x40811000,4096) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x40702e70) = 0
1 mmap2(NULL,4096,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_ANONYMOUS|MAP_UNINITIALIZED,-1,0) = 0x40811000
1 read(3,0x40811000,4096) = 4096
1 mmap2(NULL,475136,PROT_NONE,MAP_PRIVATE|MAP_ANONYMOUS,-1,0) = 0x4085a000
1 mmap2(0x4085a000,413376,PROT_EXEC|PROT_READ,MAP_PRIVATE|MAP_FIXED,3,0) = 0x4085a000
1 mmap2(0x408c7000,4980,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_FIXED,3,0x65) = 0x408c7000
1 mmap2(0x408c9000,17872,PROT_READ|PROT_WRITE,MAP_PRIVATE|MAP_ANONYMOUS|MAP_FIXED,-1,0) = 0x408c9000
1 close(3) = 0
1 munmap(0x40811000,4096) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x40702e60) = 0
1 close(3) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x40702e50) = 0
1 close(3) = 0
1 open("/lib/libc.so.0",O_RDONLY) = 3
1 fstat(3,0x40702e40) = 0
1 close(3) = 0
1 stat("/lib/ld-uClibc.so.0",0x407038c0) = 0
1 open("/dev/urandom",O_RDONLY) = 3
1 read(3,0x40703908,4) = 4
1 close(3) = 0
1 mprotect(0x4081c000,4096,PROT_READ) = 0
1 mprotect(0x40846000,4096,PROT_READ) = 0
1 mprotect(0x408c7000,4096,PROT_READ) = 0
1 mprotect(0x4080d000,4096,PROT_READ) = 0
1 ioctl(0,TCGETS,0x40703684) = -1 errno=25 (Inappropriate ioctl for device)
1 ioctl(1,TCGETS,0x40703684) = -1 errno=25 (Inappropriate ioctl for device)
1 getuid32(1081100444,47,0,1081100451,375624,1081096916) = 0
1 ioctl(0,TIOCGWINSZ,0x40703a00) = -1 errno=25 (Inappropriate ioctl for device)
1 write(1,0x408ca648,1077)BusyBox v1.7.2 (2014-04-11 16:23:13 CST) multi-call binary
Copyright (C) 1998-2006 Â Erik Andersen, Rob Landley, and others.
Licensed under GPLv2. Â See source distribution for full notice.

Usage: busybox [function] [arguments]...
   or: [function] [arguments]...

	BusyBox is a multi-call binary that combines many common Unix
	utilities into a single executable.  Most people will create a
	link to busybox for each function they wish to use and BusyBox
	will act like whatever it was invoked as!

Currently defined functions:
	[, [[, arp, ash, awk, basename, cat, chmod, clear, cp, cut, date, df, dirname, dmesg, du, echo, egrep, env, expr, false, fgrep, find, free, grep, halt, head, hostid, id, ifconfig, insmod,
	ip, kill, killall, klogd, less, logread, ls, lsmod, mkdir, mkfifo, mknod, more, mount, mv, netstat, passwd, ping, ping6, pivot_root, poweroff, printf, ps, pwd, rdate, reboot, reset, rm,
	rmdir, rmmod, route, sed, sh, sleep, sysctl, syslogd, tail, telnet, telnetd, test, top, touch, true, umount, uname, uptime, usleep, vi, wget, xargs, yes, flash_eraseall

 = 1077
1 exit(0)

[[0;33m*[0m] Identification of missing filesytem areas.
[[0;33m*[0m] No missing areas found.

-----------------------------------------------------------------


[[0;33m*[0m] Binary protection state of [0;33mlibc.so.0[0m
[REF] /logs/s12_binary_protection.txt

  
  	[32mFull RELRO[0m     [32mCanary found[0m      [32mNX enabled[0m   [33mDSO[0m          [32mNo RPATH[0m     [32mNo RUNPATH[0m   [32mNo Symbols

[0m
[[0;33m*[0m] Function [0;33mstrcpy[0m tear down of [0;33mlibc.so.0[0m

mov r0, sp
mov r6, r1
mov r5, sp
bl rsym.__GI_uname
cmn r0, 1
beq 0x15ee8
add r5, sp, 0x144
add r5, r5, 1
mov r0, r5
bl sym.strlen
add r0, r0, 1
cmp r0, r6
bls 0x15ed8
bl rsym.__errno_location
mov r3, 0x16
str r3, [r0]
mvn r0, 0
b 0x15ee8
mov r0, r4
mov r1, r5
[31mbl rsym.__GI_strcpy[0m
mov r0, 0
add sp, sp, 0x188
--
mov r4, r0
mov r0, sp
mov r6, r1
mov r5, sp
bl rsym.__GI_uname
cmn r0, 1
beq 0x15fd0
add r5, sp, 0x41
mov r0, r5
bl sym.strlen
add r0, r0, 1
cmp r0, r6
bls 0x15fc0
bl rsym.__errno_location
mov r3, 0x16
str r3, [r0]
mvn r0, 0
b 0x15fd0
mov r0, r4
mov r1, r5
[31mbl rsym.__GI_strcpy[0m
mov r0, 0
add sp, sp, 0x188
--
moveq r3, 1
uxtb r3, r3
cmp r3, 0
beq 0x1fc54
ldr r3, [r4, 4]
ldr r7, [r3, r6, lsl 2]
mov r0, r7
bl sym.strlen
mov r8, r0
mov r0, r7
add r1, r8, 2
bl rsym.realloc
subs r7, r0, 0
bne 0x1fc40
mov r0, r4
bl rsym.__GI_globfree
str r7, [r4]
b 0x1fab4
add r0, r7, r8
ldr r1, [fp, -0x10c]
[31mbl rsym.__GI_strcpy[0m
ldr r3, [r4, 4]
str r7, [r3, r6, lsl 2]
--
moveq r3, 1
uxtb r3, r3
cmp r3, 0
beq 0x20730
ldr r3, [r4, 4]
ldr r7, [r3, r6, lsl 2]
mov r0, r7
bl sym.strlen
mov r8, r0
mov r0, r7
add r1, r8, 2
bl rsym.realloc
subs r7, r0, 0
bne 0x2071c
mov r0, r4
bl rsym.__GI_globfree64
str r7, [r4]
b 0x20590
add r0, r7, r8
ldr r1, [fp, -0x12c]
[31mbl rsym.__GI_strcpy[0m
ldr r3, [r4, 4]
str r7, [r3, r6, lsl 2]
--
ldr r4, [0x00022588]
cmp r7, 0x3f
orrhi r3, r3, 1
cmp r3, 0
mov r5, r2
mov r8, r1
add r4, pc, r4
beq 0x22318
bl rsym.__errno_location
mov r3, 0x16
mov r5, 0
str r3, [r0]
b 0x2257c
cmp r2, 0
addne r1, r2, 0x900
addne r1, r1, 0xc
ldreq r1, [0x0002258c]
addeq r1, r4, r1
add r6, sp, 0x10c
mov r0, r6
[31mbl rsym.__GI_strcpy[0m
ldrb sl, [r8]
cmp sl, 0
--
ldr r2, [sp, 0x94]
add r6, r6, 1
cmp r6, 1
str r2, [r3, -0x40]
beq 0x3032c
ldrb r3, [r4]
cmp r3, 0
beq 0x304b0
ldr r3, [0x0003053c]
mov r1, 0
mov r2, 0x30
strb r1, [r5, r3]
ldr r3, [0x00030540]
ldr r4, [r5, r3]
mov r0, r4
bl memset
ldr r1, [0x0003052c]
add r0, r4, 0x10
add r1, r5, r1
add r1, r1, 3
[31mbl rsym.__GI_strcpy[0m
b 0x304c4
ldr r3, [0x00030540]
--
movw r3, 0x16d
cmp r1, 0
movw r0, 0x16e
movne r0, r3
pop {r4, pc}
movw r0, 0x16e
pop {r4, pc}
push {r4, r5, r6, lr}
sub sp, sp, 0x30
mov r6, r0
mov r2, 0x30
mov r0, sp
mov r1, 0
ldr r4, [0x0003088c]
mov r5, sp
bl memset
ldr r1, [0x00030890]
add r0, sp, 0x10
add r4, pc, r4
add r1, r4, r1
[31mbl rsym.__GI_strcpy[0m
mov r0, r6
mov r1, 1
--
beq 0x30c94
ldr sb, [sb]
cmp sb, 0
bne 0x30c10
mov r0, sl
mov r1, 7
bl rsym.__GI_strnlen
cmp r0, 6
bgt 0x30c80
add r0, r0, 8
bl rsym.malloc
cmp r0, 0
ldr r3, [0x00030ec8]
beq 0x30c8c
ldr r3, [r5, r3]
mov r1, sl
ldr r2, [r3]
str r0, [r3]
str r2, [r0]
add r0, r0, 4
[31mbl rsym.__GI_strcpy[0m
mov r8, r0
b 0x30c94
--
ldr r7, [sp, 0x18]
cmp r8, 0xff
mov r3, 0
mov r5, r0
mov r4, r1
mov r6, r2
str r3, [r7]
bhi 0x3544c
bl rsym.__errno_location
mov r3, 0x22
str r3, [r0]
mov r0, r3
pop {r4, r5, r6, r7, r8, pc}
cmp r0, r2
beq 0x3546c
bl sym.strlen
cmp r0, r8
bhs 0x35438
mov r0, r6
mov r1, r5
[31mbl rsym.__GI_strcpy[0m
mov r0, r4
mov r1, r6
--
add r0, sp, 0x14
ldr r6, [r5, 0x2c]
rsb r3, r3, 1
ldr r4, [r5, 0x38]
mov r1, 0
add r2, r2, 1
str r2, [r5, 0x34]
mov r2, r7
bl rsym._stdlib_strto_ll
mov r2, r0
mov r3, r1
mov r0, r6
mov r1, r4
bl rsym._store_inttype
b 0x3ae54
ldrb r2, [r3]
cmp r2, 0
bne 0x3abe0
mov r0, r6
ldr r1, [r4, 0x30]
[31mbl rsym.__GI_strcpy[0m
ldr r3, [r4, 0x34]
add r6, r6, r3
--
bl rsym.__GI_fstat
cmp r0, 0
add r4, pc, r4
bge 0x40a30
bl rsym.__errno_location
ldr r4, [r0]
b 0x40b58
mov r0, r5
bl rsym.__GI_isatty
cmp r0, 0
beq 0x40b4c
ldr r5, [0x00040b68]
add sl, sp, 0x10
add r5, r4, r5
add r4, sp, 0xc0
b 0x40b40
add r7, r5, 1
mov r0, r4
mov r1, r7
add fp, r4, sb
[31mbl rsym.__GI_strcpy[0m
mov r0, r7
rsb sb, sb, 0x1e
bl rsym.__GI_opendir
subs r6, r0, 0
bne 0x40b1c
b 0x40b34
add r1, r1, 0xb
mov r0, r1
str r1, [sp, 4]
bl sym.strlen
cmp r0, sb
ldr r1, [sp, 4]
bhi 0x40b1c
mov r0, fp
[31mbl rsym.__GI_strcpy[0m
mov r0, r4
mov r1, sl
--
and r3, r3, 0xf000
cmp r3, 0x2000
bne 0x40b1c
ldr r3, [sp, 0x30]
ldr r2, [sp, 0x88]
cmp r2, r3
bne 0x40b1c
ldr r3, [sp, 0x34]
ldr r2, [sp, 0x8c]
cmp r2, r3
bne 0x40b1c
mov r0, r6
bl rsym.__GI_closedir
mov r0, r4
bl sym.strlen
cmp r0, r8
movhi r4, 0x22
bhi 0x40b50
mov r1, r4
ldr r0, [sp, 0xc]
[31mbl rsym.__GI_strcpy[0m
ldr r4, [sp, 8]
b 0x40b50
--
add fp, sp, 0x20
add ip, pc, ip
sub sp, sp, 0xcc
mov r7, r0
add r1, ip, r1
mov r0, r3
mov r5, r2
mov r8, r3
bl sym.strcmp
subs r4, r0, 0
bne 0x413f0
sub r8, fp, 0xdc
mov r1, r4
mov r2, 0x6e
mov r0, r8
bl memset
mov r3, 1
mov r1, r7
add r0, r8, 2
strh r3, [fp, -0xdc]
[31mbl rsym.__GI_strcpy[0m
sub r3, fp, 0x24
mvn r2, 0
--
bl 0x41608
subs r5, r0, 0
add r6, pc, r6
beq 0x41878
ldr r3, [r4, 4]
add r1, sp, 0x400
mov r0, r4
add r1, r1, 4
ldr r3, [r3, 8]
blx r3
ldr r1, [0x0004188c]
mov r2, r7
mov r0, r5
add r1, r6, r1
bl rsym.__GI_sprintf
add r4, r5, r0
ldr r0, [sp, 0x404]
bl rsym.__GI_clnt_sperrno
mov r1, r0
mov r0, r4
[31mbl rsym.__GI_strcpy[0m
mov r0, r4
bl sym.strlen
--
add r1, r6, r1
b 0x41838
ldr r7, [0x00041894]
mov r3, 0
ldr r1, [sp, 0x408]
add r7, r6, r7
add r2, r7, r3, lsl 3
ldr r0, [r2, 0x254]
cmp r0, r1
ldreq r3, [r2, 0x258]
addeq r7, r7, 0x294
addeq r7, r7, r3
beq 0x417ec
add r3, r3, 1
cmp r3, 7
bls 0x417c0
mov r7, 0
ldr r1, [0x00041898]
mov r0, r4
add r1, r6, r1
[31mbl rsym.__GI_strcpy[0m
mov r0, r4
bl sym.strlen
cmp r7, 0
add r4, r4, r0
beq 0x41828
mov r0, r4
mov r1, r7
[31mbl rsym.__GI_strcpy[0m
mov r0, r4
bl sym.strlen
--
sub sp, sp, 0x400
sub sp, sp, 4
ldr r4, [0x000419f0]
mov r7, r0
bl 0x41608
subs r6, r0, 0
add r4, pc, r4
beq 0x419e0
bl rsym.__GI___rpc_thread_createerr
ldr r1, [0x000419f4]
mov r2, r7
mov r5, r0
mov r0, r6
add r1, r4, r1
bl rsym.__GI_sprintf
add r7, r6, r0
ldr r0, [r5]
bl rsym.__GI_clnt_sperrno
mov r1, r0
mov r0, r7
[31mbl rsym.__GI_strcpy[0m
mov r0, r7
bl sym.strlen
ldr r3, [r5]
add r7, r7, r0
cmp r3, 0xc
beq 0x4198c
cmp r3, 0xe
bne 0x419d0
ldr r1, [0x000419f8]
mov r0, r7
add r1, r4, r1
[31mbl rsym.__GI_strcpy[0m
mov r0, r7
bl sym.strlen
add r7, r7, r0
ldr r0, [r5, 4]
bl rsym.__GI_clnt_sperrno
mov r1, r0
mov r0, r7
[31mbl rsym.__GI_strcpy[0m
mov r0, r7
bl sym.strlen
add r7, r7, r0
b 0x419d0
ldr r1, [0x000419f8]
mov r0, r7
add r1, r4, r1
[31mbl rsym.__GI_strcpy[0m
mov r0, r7
bl sym.strlen
mov r2, 0x400
add r4, r7, r0
mov r1, sp
ldr r0, [r5, 8]
bl rsym.__GI___glibc_strerror_r
mov r1, sp
mov r0, r4
[31mbl rsym.__GI_strcpy[0m
mov r0, r4
bl sym.strlen
--
bic r2, r2, 7
mov r0, r6
sub sp, sp, r2
sub r2, fp, 0x28
str r2, [sp]
sub r1, fp, 0x44
add r2, sp, 8
bl rsym.__GI_getpwnam_r
cmp r0, 0
bne 0x45a98
ldr r3, [fp, -0x28]
cmp r3, 0
beq 0x45a98
ldr r0, [r3, 0x14]
bl sym.strlen
add r0, r0, 9
bl rsym.malloc
ldr r3, [fp, -0x28]
mov sl, r0
ldr r1, [r3, 0x14]
[31mbl rsym.__GI_strcpy[0m
ldr r1, [0x00045ab4]
mov r0, sl
--
bl rsym.__GI_geteuid
cmp r5, r0
bne 0x47488
bl rsym.__GI_getgid
mov r5, r0
bl rsym.__GI_getegid
cmp r5, r0
bne 0x47488
ldr r0, [0x000474a0]
add r0, r4, r0
bl rsym.__GI_getenv
subs r5, r0, 0
beq 0x47488
bl sym.strlen
add r0, r0, 0x16
mov r1, r5
bic r0, r0, 7
sub sp, sp, r0
mov r0, sp
mov r6, sp
[31mbl rsym.__GI_strcpy[0m
ldr r1, [0x000474a4]
mov r0, sp
--
cmp r0, 3
addls pc, pc, r0, lsl 2
b 0x47434
b 0x47334
b 0x47388
b 0x47448
b 0x47448
bl 0x46fd4
cmp r0, 0
beq 0x47448
ldr r0, [sb]
cmp r0, 0
bne 0x47374
mov r0, r5
bl sym.strlen
add r0, r0, 1
bl rsym.malloc
cmp r0, 0
beq 0x47404
mov r1, r5
[31mbl rsym.__GI_strcpy[0m
str r0, [sb]
b 0x47448
--
cmp r0, 0
beq 0x47448
ldr r3, [sl]
cmp r3, 0
bne 0x47448
mov r0, r5
bl sym.strlen
add r0, r0, 1
bl rsym.malloc
cmp r0, 0
bne 0x47424
ldr r0, [0x000474c4]
add r0, r4, r0
bl rsym.__GI_printf
ldr r3, [0x000474ac]
add r4, r4, r3
ldr r0, [r4, 0x64]
bl rsym.__GI_fclose
b 0x47488
mov r1, r5
[31mbl rsym.__GI_strcpy[0m
str r0, [sl]
b 0x47448
--
b 0x4d8a0
ldr r1, [fp, -0xa0]
mov r2, 4
add r0, r0, 0x24
bl memcpy
ldrh r2, [r7, 0xc]
add r0, r4, 0x28
mov r1, 0
strh r2, [r6, 2]
mov r2, 8
bl memset
ldr r2, [fp, -0x90]
cmp sl, 0
ldr r3, [r2]
streq sl, [r3, 0x18]
beq 0x4d8c8
ldr r2, [fp, -0xa8]
mov r1, sl
add r0, r3, r2
str r0, [r3, 0x18]
[31mbl rsym.__GI_strcpy[0m
ldr r2, [fp, -0x90]
ldr r7, [r7]
--
strb r1, [r8, -0x14]
add r5, r5, 1
strb fp, [r3, -0x14]
ble 0x4e1e4
add r3, sp, 0x20
mov r6, 0
add r5, r3, r5
add r4, sp, 0xc
strb r6, [r5, -0x15]
mov r0, r4
bl sym.strlen
cmp r0, sb
bls 0x4e2e4
bl rsym.__errno_location
mov r3, 0x1c
str r3, [r0]
mov r0, r6
b 0x4e2f0
ldr r0, [sp, 4]
mov r1, r4
[31mbl rsym.__GI_strcpy[0m
add sp, sp, 0x24
pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
--
cmp sl, 7
ble 0x4e44c
cmn r6, 1
beq 0x4e528
add r6, r8, r6
cmp r6, 8
moveq r3, 0x3a
strbeq r3, [r7], 1
mov r4, 0
add r1, sp, 0x10
strb r4, [r7], 1
rsb r7, r1, r7
cmp r7, sb
bls 0x4e554
bl rsym.__errno_location
mov r3, 0x1c
str r3, [r0]
mov r0, r4
b 0x4e570
mov r0, fp
[31mbl rsym.__GI_strcpy[0m
b 0x4e570
bl rsym.__errno_location
--
bl rsym.__pthread_mutex_lock
bl rsym.__open_nameservers
ldr r3, [0x0004f760]
ldr lr, [sp, 0x28]
ldr r2, [sp, 0x3c]
ldr r3, [r7, r3]
ldr r3, [r3]
str r3, [sp, 0x24]
mov r3, 0
strb r3, [lr, r2]
ldr r1, [sp, 0x24]
cmp sl, r1
bhs 0x4f184
mov r3, 0x2e
strb r3, [lr, r2]
ldr r3, [0x0004f764]
ldr r0, [sp, 0x54]
ldr r3, [r7, r3]
ldr r3, [r3]
ldr r1, [r3, sl, lsl 2]
[31mbl rsym.__GI_strcpy[0m
cmp r8, 0
bge 0x4f1c0
--
ldr r2, [sp, 0x18]
mov r0, r5
ldr r1, [sp, 0x20]
ldrb r3, [r2], -1
str r2, [sp, 0x18]
and r2, r3, 0xf
lsr r3, r3, 4
bl rsym.__GI_sprintf
ldr r3, [sp, 0x18]
add r5, r5, r0
cmp r3, r4
bhs 0x504d8
ldr r1, [0x0005066c]
mov ip, r5
mov r0, ip
mov r5, r6
mov r6, r7
mov r7, fp
add r1, sl, r1
ldr fp, [sp, 0x24]
[31mbl rsym.__GI_strcpy[0m
add sl, sp, 0x2c
mov r2, 0x28
--
ldr sb, [sp, 0x14]
b 0x508a4
str sl, [r5, sb, lsl 2]
add sl, sl, 4
add sb, sb, 1
ldr r3, [sp, 0x40]
cmp sb, r3
bls 0x50898
mov r3, 0
str r3, [r5, sb, lsl 2]
ldr sb, [sp, 0x1c]
cmp sb, r3
beq 0x508e4
mov r0, sb
bl sym.strlen
cmp fp, r0
bls 0x508e4
mov r7, sl
mov r0, sl
mov r1, sb
[31mbl rsym.__GI_strcpy[0m
mov r3, 2
str r7, [r4]
--
add r1, r3, r1
bl rsym.__GI_fopen
subs r4, r0, 0
movne r6, sp
addne r5, sp, 0x100
bne 0x521f8
b 0x52220
mov r0, sp
mov r1, r5
bl 0x520d4
subs sl, r0, 0
beq 0x521f8
mov r0, r8
mov r1, r5
mov r2, 6
bl sym.bcmp
subs sb, r0, 0
bne 0x521f8
mov r0, r7
mov r1, sl
[31mbl rsym.__GI_strcpy[0m
b 0x52214
mov r0, sp
--
bne 0x54228
bl rsym.__errno_location
mov r3, 2
mov r5, r4
str r3, [r0]
b 0x54490
bl sym.strlen
movw r3, 0xffd
cmp r0, r3
bls 0x54248
bl rsym.__errno_location
mov r3, 0x24
str r3, [r0]
b 0x54374
rsb r4, r0, 0xff0
add r6, sp, 0x10
add r4, r4, 0xf
mov r1, r7
add r6, r6, r4
mov r0, r6
[31mbl rsym.__GI_strcpy[0m
cmp r5, 0
movne fp, 0
--
bne 0x55534
ldr r2, [sp, 0x6c]
add sl, sp, 0x6b
mvn r3, 9
mov r0, sl
str r3, [sp]
asr r3, r2, 0x1f
str r7, [sp, 4]
bl rsym._uintmaxtostr
rsb sl, r0, sl
mov fp, r0
add sl, sl, 0xa
cmp r8, sl
bhs 0x5550c
mov r0, 0x22
str r0, [r4]
b 0x55704
ldr r1, [0x00055714]
mov r0, r6
add r1, r5, r1
[31mbl rsym.__GI_strcpy[0m
mov r0, r6
mov r1, fp
--
cmp r0, 4
orr r3, r3, r8, lsl 20
bic r3, r3, 0xff
orr r3, r3, r7
str r3, [sp, 0x6c]
subeq r3, r3, 0x80
streq r3, [sp, 0x6c]
ldr r3, [0x0005571c]
ldr r7, [r5, r3]
mov r0, r7
bl sym.strlen
ldr r3, [sp, 0x6c]
cmp r3, 0
add r2, r3, 0xf
movlt r3, r2
cmp r0, r3, asr 4
bls 0x556f4
ldr r1, [0x00055718]
mov r0, r6
add r1, r5, r1
[31mbl rsym.__GI_strcpy[0m
mov r0, r6
bl sym.strlen

[[0;33m*[0m] Function [0;33mstrcpy[0m used [0;33m36[0m times [0;33mlibc.so.0[0m


[[0;33m*[0m] Binary protection state of [0;33mlibc.so.0[0m
[REF] /logs/s12_binary_protection.txt

  
  	[32mFull RELRO[0m     [32mCanary found[0m      [32mNX enabled[0m   [33mDSO[0m          [32mNo RPATH[0m     [32mNo RUNPATH[0m   [32mNo Symbols

[0m
[[0;33m*[0m] Function [0;33mfprintf[0m tear down of [0;33mlibc.so.0[0m

bl rsym.__GI_fgets
b 0x14c60
ldr r8, [0x00014d50]
add r8, r4, r8
mov r0, r5
mov r1, r8
mov r2, r7
bl rsym.__GI_fscanf
cmn r0, 1
mov r6, r0
bne 0x14c3c
mov r0, r5
bl rsym.__GI_fclose
cmn r6, 1
bne 0x14cb4
ldr r3, [0x00014d54]
ldr r1, [0x00014d58]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r0, [r3]
[31mbl rsym.__GI_fprintf[0m
bl rsym.__errno_location
mov r3, 0x13
--
cmp r4, 0
bne 0x18c90
add r4, r4, 1
cmp r3, 0
str r4, [ip, r2]
ldr r2, [0x00018c9c]
ldr r2, [ip, r2]
ldr r4, [r2]
ldr r2, [0x00018ca0]
ldr r2, [ip, r2]
ldr r2, [r2]
ldreq r3, [0x00018ca4]
addeq r3, ip, r3
str r1, [sp]
ldr r1, [0x00018ca8]
str r3, [sp, 4]
mov r3, lr
str r0, [sp, 8]
mov r0, r4
add r1, ip, r1
[31mbl rsym.__GI_fprintf[0m
bl rsym.__GI_abort
strheq r4, [r5], -ip
--
bl rsym.__curlocale
add r0, r0, 4
pop {r3, pc}
push {r3, lr}
bl rsym.__curlocale
add r0, r0, 8
pop {r3, pc}
push {r0, r1, r2, lr}
mov r3, r0
ldr r2, [0x00019054]
ldr r0, [0x00019058]
ldr ip, [0x0001905c]
add r2, pc, r2
str r1, [sp]
ldr r0, [r2, r0]
ldr ip, [r2, ip]
ldr r1, [0x00019060]
ldr r0, [r0]
add r1, r2, r1
ldr r2, [ip]
[31mbl rsym.__GI_fprintf[0m
bl rsym.__GI_abort
andeq r4, r5, r4, asr 9
--
rsbs r6, r6, 1
movlo r6, 0
cmp r6, 0
beq 0x19ddc
ldr r3, [0x00019e5c]
add r0, sp, 0x40
add r2, r2, 0x48
ldr r1, [r4, r3]
bl rsym._pthread_cleanup_push_defer
ldr r0, [r8]
add r0, r0, 0x48
bl rsym.__pthread_mutex_lock
ldr r3, [0x00019e58]
ldr r1, [0x00019e54]
ldr r8, [r4, r3]
ldr r3, [0x00019e60]
add r1, r4, r1
ldr r0, [r8]
ldr r3, [r4, r3]
ldr r2, [r3]
[31mbl rsym.__GI_fprintf[0m
cmp r7, 0
beq 0x19e1c
sub r5, r5, 2
ldr r0, [r8]
mov r1, r7
mov r2, sl
[31mbl rsym.__GI_vfprintf[0m
ldr r3, [0x00019e58]
mov r1, r5
mov r2, sp
ldr r3, [r4, r3]
ldr r0, [r3]
[31mbl rsym.__GI_fprintf[0m
cmp r6, 0
beq 0x19e48
--
ldr r3, [0x0001a018]
add r4, pc, r4
ldr r3, [r4, r3]
ldr r0, [r3]
bl rsym.__GI_fflush
ldr r3, [0x0001a01c]
ldr r3, [r4, r3]
ldr r3, [r3]
cmp r3, 0
beq 0x19f68
blx r3
b 0x19f8c
ldr r3, [0x0001a020]
ldr r1, [0x0001a024]
ldr r2, [r4, r3]
ldr r3, [0x0001a028]
add r1, r4, r1
ldr r0, [r2]
ldr r3, [r4, r3]
ldr r2, [r3]
[31mbl rsym.__GI_fprintf[0m
ldr r3, [0x0001a020]
add r2, sp, 0x24
ldr r1, [sp, 0x20]
str r2, [sp, 4]
ldr r7, [r4, r3]
ldr r0, [r7]
[31mbl rsym.__GI_vfprintf[0m
ldr r3, [0x0001a02c]
cmp r6, 0
ldr r3, [r4, r3]
ldr r2, [r3]
add r2, r2, 1
str r2, [r3]
beq 0x19fe4
mov r0, r6
ldr r7, [r7]
bl rsym.__GI_strerror
ldr r1, [0x0001a030]
mov r2, r0
mov r0, r7
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
ldr r3, [0x0001a020]
mov r0, 0xa
--
str r5, [r2, 4]
ldr r3, [0x0001a1a8]
ldr r3, [r4, r3]
ldr r0, [r3]
bl rsym.__GI_fflush
ldr r3, [0x0001a1ac]
ldr r3, [r4, r3]
ldr r3, [r3]
cmp r3, 0
beq 0x1a0d0
blx r3
b 0x1a0f4
ldr r3, [0x0001a1b0]
ldr r1, [0x0001a1b4]
ldr r2, [r4, r3]
ldr r3, [0x0001a1b8]
add r1, r4, r1
ldr r0, [r2]
ldr r3, [r4, r3]
ldr r2, [r3]
[31mbl rsym.__GI_fprintf[0m
cmp r5, 0
beq 0x1a11c
ldr r3, [0x0001a1b0]
mov r2, r5
ldr r1, [0x0001a1bc]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r0, [r3]
mov r3, r8
[31mbl rsym.__GI_fprintf[0m
ldr r3, [0x0001a1b0]
add r2, sp, 0x24
ldr r1, [sp, 0x20]
str r2, [sp, 4]
ldr r5, [r4, r3]
ldr r0, [r5]
[31mbl rsym.__GI_vfprintf[0m
ldr r3, [0x0001a1c0]
cmp r7, 0
ldr r3, [r4, r3]
ldr r2, [r3]
add r2, r2, 1
str r2, [r3]
beq 0x1a174
mov r0, r7
ldr r5, [r5]
bl rsym.__GI_strerror
ldr r1, [0x0001a1c4]
mov r2, r0
mov r0, r5
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
ldr r3, [0x0001a1b0]
mov r0, 0xa
--
add r0, r0, sl, lsl 2
ldr r3, [sb, r3]
bl rsym.__GI_qsort
mov r0, r8
sub sp, fp, 0x20
pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}
andeq sp, r4, r8, ror r2
invalid
invalid
strheq r0, [r0], -ip
push {r3, lr}
ldr r3, [0x000207f4]
ldr r2, [0x000207f8]
add r3, pc, r3
ldr r1, [0x000207fc]
ldr r2, [r3, r2]
add r1, r3, r1
ldr r0, [r2]
ldr r2, [0x00020800]
add r2, r3, r2
[31mbl rsym.__GI_fprintf[0m
mov r0, 1
bl rsym.__GI_exit
--
mov r2, 2
mov r6, r0
bl rsym.__GI_fseek
cmp r0, 0
add r5, pc, r5
movlt r0, 1
blt 0x22a4c
ldr r3, [r4, 8]
mov r0, r6
ldr r1, [0x00022a58]
ldr r2, [r4]
str r3, [sp]
ldr r3, [r4, 0xc]
add r1, r5, r1
str r3, [sp, 4]
ldr r3, [r4, 0x10]
str r3, [sp, 8]
ldr r3, [r4, 0x14]
str r3, [sp, 0xc]
ldr r3, [r4, 4]
[31mbl rsym.__GI_fprintf[0m
lsr r0, r0, 0x1f
add sp, sp, 0x10
--
b 0x351fc
ldr r7, [r1, 0x44]
rsbs r7, r7, 1
movlo r7, 0
cmp r7, 0
beq 0x35168
ldr r3, [0x0003520c]
add r8, r1, 0x48
add r0, sp, 8
mov r2, r8
ldr r1, [r4, r3]
bl rsym._pthread_cleanup_push_defer
mov r0, r8
bl rsym.__pthread_mutex_lock
ldr r3, [r6, 8]
mov r0, r5
ldr r1, [0x00035210]
str r3, [sp]
add r1, r4, r1
ldm r6, {r2, r3}
[31mbl rsym.__GI_fprintf[0m
cmp r0, 0
blt 0x351e4
ldr r1, [0x00035214]
ldr r3, [0x00035214]
ldr r6, [r6, 0xc]
add r1, r4, r1
add r1, r1, 1
add r4, r4, r3
ldr r2, [r6]
cmp r2, 0
bne 0x351cc
mov r0, 0xa
mov r1, r5
bl rsym.__GI___fputc_unlocked
cmp r0, 0
movge r4, 0
mvnlt r4, 0
b 0x351e8
mov r0, r5
[31mbl rsym.__GI_fprintf[0m
cmp r0, 0
addge r6, r6, 4
--
bne 0x35248
bl rsym.__errno_location
mov r3, 0x16
str r3, [r0]
mvn r0, 0
b 0x35290
ldr r0, [r0, 8]
str r0, [sp]
ldr r0, [r3, 0xc]
str r0, [sp, 4]
ldr r0, [r3, 0x10]
str r0, [sp, 8]
ldr r0, [r3, 0x14]
str r0, [sp, 0xc]
ldr r0, [r3, 0x18]
str r0, [sp, 0x10]
mov r0, r1
ldr r1, [0x0003529c]
add r1, r2, r1
ldm r3, {r2, r3}
[31mbl rsym.__GI_fprintf[0m
cmp r0, 0
movge r0, 0
--
rsbs r7, r7, 1
movlo r7, 0
cmp r7, 0
add r4, pc, r4
beq 0x352e8
ldr r3, [0x000353bc]
add r8, r1, 0x48
mov r0, sp
mov r2, r8
ldr r1, [r4, r3]
bl rsym._pthread_cleanup_push_defer
mov r0, r8
bl rsym.__pthread_mutex_lock
ldm r6, {r2, r3}
cmp r3, 0
ldreq r3, [0x000353c0]
addeq r3, r4, r3
ldr r1, [0x000353c4]
mov r0, r5
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
cmp r0, 0
blt 0x35394
ldr sb, [0x000353c8]
mov r8, 0
ldr sl, [0x000353cc]
add sb, r4, sb
add sl, r4, sl
ldrb r3, [sb, r8]
mov r0, r5
ldr r2, [r6, r3]
cmn r2, 1
addeq r1, sl, 3
movne r1, sl
[31mbl rsym.__GI_fprintf[0m
cmp r0, 0
blt 0x35394
add r8, r8, 1
cmp r8, 5
bls 0x35324
ldr r2, [r6, 0x20]
cmn r2, 1
beq 0x35378
ldr r1, [0x000353d0]
mov r0, r5
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
cmp r0, 0
blt 0x35394
--
cmp r6, 0
beq 0x360cc
mov r0, sp
mov r1, 1
bl rsym._pthread_cleanup_pop_restore
mov r0, r5
add sp, sp, 0x14
pop {r4, r5, r6, r7, pc}
ldrdeq r7, r8, [r3], -r8
andeq r0, r0, r8, ror 19
push {r0, r1, r2, r3}
ldr r3, [0x00036118]
push {r0, r1, r2, lr}
add r3, pc, r3
ldr r1, [0x0003611c]
add r2, sp, 0x14
str r2, [sp, 4]
ldr r3, [r3, r1]
ldr r1, [sp, 0x10]
ldr r0, [r3]
[31mbl rsym.__GI_vfprintf[0m
pop {r1, r2, r3, lr}
add sp, sp, 0x10
--
mov r2, r1
ldr r1, [0x00036148]
mov ip, r0
add r3, pc, r3
ldr r3, [r3, r1]
mov r1, ip
ldr r0, [r3]
[31mb rsym.__GI_vfprintf[0m
andeq r7, r3, r0, asr 7
andeq r0, r0, r4, asr sb
mov ip, r1
mov r3, r2
mvn r1, 0
mov r2, ip
b rsym.__GI_vsnprintf
push {r1, r2, r3}
push {r0, r1, lr}
add r2, sp, 0x10
ldr r1, [sp, 0xc]
str r2, [sp, 4]
[31mbl rsym.__GI_vfprintf[0m
pop {r2, r3, lr}
add sp, sp, 0xc
--
add r3, sp, 0x10
ldr r2, [sp, 0xc]
str r3, [sp, 4]
bl rsym.__GI_vsnprintf
pop {r2, r3, lr}
add sp, sp, 0xc
bx lr
push {r0, r1, r4, r5, r6, r7, r8, lr}
mov r5, 0
mov r7, r1
str r5, [r0]
add r1, sp, 4
mov r4, r0
mov r8, r2
bl rsym.__GI_open_memstream
subs r6, r0, 0
mvneq r7, 0
beq 0x36270
mov r1, r7
mov r2, r8
[31mbl rsym.__GI_vfprintf[0m
mov r7, r0
mov r0, r6
--
add r3, pc, r3
str r0, [sp, 4]
add r0, sp, 0x48
str r1, [sp, 0xc]
ldr r3, [r3, r2]
str r7, [sp, 0x20]
str r7, [sp, 0x28]
str r3, [sp, 0x24]
mov r3, 0xd0
strh r3, [sp]
mov r3, 1
str r3, [sp, 0x44]
str r7, [sp, 0x2c]
strb r7, [sp, 2]
str r7, [sp, 0x38]
bl rsym.__stdio_init_mutex
mov r2, r5
mov r0, sp
mov r1, r6
str r7, [sp, 0x18]
[31mbl rsym._vfprintf_internal[0m
subs r5, r0, 0
ble 0x36320
--
str r8, [sp, 0x20]
mov sl, sp
str r8, [sp, 0x24]
str r8, [sp, 0x28]
str r8, [sp, 0x2c]
strb r8, [sp, 2]
str r8, [sp, 0x38]
bl rsym.__stdio_init_mutex
mvn r3, r4
mov r0, sp
cmp r3, r5
movlo r5, r3
mov r1, r7
add r3, r4, r5
mov r2, r6
str r8, [sp, 0x18]
str r4, [sp, 8]
str r3, [sp, 0xc]
str r4, [sp, 0x10]
str r4, [sp, 0x14]
[31mbl rsym._vfprintf_internal[0m
cmp r5, r8
beq 0x363f0
--
add r6, r0, 0x48
mov r0, sp
ldr r1, [r3, r2]
mov r2, r6
bl rsym._pthread_cleanup_push_defer
mov r0, r6
bl rsym.__pthread_mutex_lock
ldrh r3, [r4]
and r3, r3, 0xc0
cmp r3, 0xc0
beq 0x38b18
mov r0, r4
mov r1, 0x80
bl rsym.__stdio_trans2w_o
cmp r0, 0
mvnne r4, 0
bne 0x38b2c
mov r0, r4
mov r1, r8
mov r2, r7
[31mbl rsym._vfprintf_internal[0m
mov r4, r0
cmp r5, 0
--
ldrb r3, [r6]
ldr r4, [0x0003e37c]
cmp r3, 0
addne r4, r5, r4
beq 0x3e33c
b 0x3e348
ldr r4, [0x0003e37c]
add r4, r5, r4
add r4, r4, 2
mov r6, r4
ldr r3, [0x0003e380]
ldr r3, [r5, r3]
ldr r7, [r3]
bl rsym.__GI_strsignal
ldr r1, [0x0003e384]
mov r2, r6
str r0, [sp]
mov r3, r4
mov r0, r7
add r1, r5, r1
[31mbl rsym.__GI_fprintf[0m
pop {r1, r2, r3, r4, r5, r6, r7, pc}
invalid
--
add r3, r4, r3
str r3, [fp, -0xa4]
ldr r3, [0x00046104]
add r3, r4, r3
str r3, [fp, -0xa8]
mov r0, r7
bl rsym.__GI_rresvport
subs r5, r0, 0
bge 0x45cc8
bl rsym.__errno_location
ldr r3, [r0]
cmp r3, 0xb
ldr r3, [0x000460fc]
ldreq r3, [r4, r3]
ldreq r1, [0x00046108]
ldreq r0, [r3]
ldrne r3, [r4, r3]
ldrne r1, [0x0004610c]
ldrne r0, [r3]
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
b 0x460e0
mov r1, 8
--
lsl r6, r6, 1
bl rsym.__GI_sleep
b 0x45c84
ldr r3, [fp, -0x30]
ldr r2, [r3, 0x10]
ldr r2, [r2, 4]
cmp r2, 0
beq 0x45e0c
ldr r2, [fp, -0x98]
ldr r0, [fp, -0x4c]
ldr r3, [r4, r2]
ldr r1, [r3]
str r3, [fp, -0xb4]
str ip, [fp, -0xb0]
str r1, [fp, -0xac]
bl rsym.__GI_inet_ntoa
ldr r1, [fp, -0xac]
mov r2, r0
mov r0, r1
ldr r1, [fp, -0xa4]
[31mbl rsym.__GI_fprintf[0m
str r5, [sb]
ldr ip, [fp, -0xb0]
mov r0, ip
bl rsym.__GI_perror
ldr r2, [fp, -0x30]
ldr r1, [r2, 0x10]
add r0, r1, 4
str r0, [r2, 0x10]
ldr r2, [r2, 0xc]
ldr r1, [r1, 4]
ldr r0, [fp, -0x94]
cmp r2, 4
movhs r2, 4
bl sym.memmove
ldr r3, [fp, -0xb4]
ldr r0, [fp, -0x4c]
ldr r5, [r3]
bl rsym.__GI_inet_ntoa
ldr r1, [fp, -0xa8]
mov r2, r0
mov r0, r5
[31mbl rsym.__GI_fprintf[0m
b 0x45c84
ldr r1, [fp, -0x98]
ldr r2, [r4, r1]
ldr r1, [0x00046110]
ldr r0, [r2]
add r1, r4, r1
ldr r2, [r3]
[31mbl rsym.__GI_fprintf[0m
b 0x460e0
ldr r2, [fp, 8]
--
str sb, [r0]
mov r7, r0
mvn r2, 0
sub r0, fp, 0x70
bl rsym.__GI_poll
cmp r0, sb
ble 0x45f1c
ldrh r3, [fp, -0x62]
tst r3, 1
bne 0x45f50
ldr r3, [r7]
cmp r3, 0
ldr r3, [0x000460fc]
ldrne r3, [r4, r3]
ldrne r1, [0x00046120]
ldrne r0, [r3]
ldreq r3, [r4, r3]
ldreq r1, [0x00046124]
ldreq r0, [r3]
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
mov r0, r6
b 0x460d4
sub r1, fp, 0x60
sub r2, fp, 0x38
mov r0, r6
bl rsym.__GI_accept
mov r7, r0
mov r0, r6
bl rsym.__GI_close
cmp r7, 0
bge 0x45f94
ldr r3, [0x000460fc]
ldr r1, [0x00046128]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r0, [r3]
[31mbl rsym.__GI_fprintf[0m
str sb, [fp, -0x34]
b 0x460d8
ldr r1, [fp, 8]
str r7, [r1]
ldrh r3, [fp, -0x5e]
lsl r2, r3, 8
orr r3, r2, r3, lsr 8
ldrh r2, [fp, -0x60]
uxth r3, r3
cmp r2, 2
strh r3, [fp, -0x5e]
bne 0x45fcc
cmp r3, 0x400
bhs 0x45fcc
cmp r3, 0x200
bhs 0x45fe8
ldr r3, [0x000460fc]
ldr r1, [0x0004612c]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r0, [r3]
[31mbl rsym.__GI_fprintf[0m
b 0x460c0
ldr r0, [fp, -0x88]
--
mov r0, r5
bl rsym.__GI_write
ldr r0, [fp, 4]
bl sym.strlen
ldr r1, [fp, 4]
add r2, r0, 1
mov r0, r5
bl rsym.__GI_write
mov r0, r5
mov r1, r6
mov r2, 1
bl rsym.__GI_read
cmp r0, 1
beq 0x4606c
ldr r3, [0x000460fc]
ldr r1, [0x00046130]
ldr r2, [r8]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r0, [r3]
[31mbl rsym.__GI_fprintf[0m
b 0x460c0
ldrb r3, [fp, -0x25]
--
subs r4, r0, 0
bne 0x48cc8
ldr r3, [0x00048da0]
ldr r1, [0x00048da4]
ldr r2, [0x00048dac]
ldr r3, [r7, r3]
add r1, r7, r1
ldr r0, [r3]
b 0x48cf0
ldr r0, [sl]
bl rsym.malloc
subs r1, r0, 0
bne 0x48cfc
ldr r3, [0x00048da0]
ldr r1, [0x00048da4]
ldr r2, [0x00048db0]
ldr r3, [r7, r3]
add r1, r7, r1
ldr r0, [r3]
add r2, r7, r2
[31mbl rsym.__GI_fprintf[0m
b 0x48d94
str r8, [r4, 0x24]
--
invalid
movw r1, 0x2260
mov r2, r1
b rsym.__GI_svcudp_bufcreate
push {r4, r5, r6, r7, r8, sb, sl, lr}
mov r8, r1
ldr sl, [r0, 0x30]
ldr r4, [0x00049340]
ldr r6, [sl, 0x1b0]
add r4, pc, r4
cmp r6, 0
beq 0x49260
ldr r3, [0x00049344]
mov r7, 0
ldr r1, [0x00049348]
ldr r2, [0x0004934c]
ldr r3, [r4, r3]
add r1, r4, r1
add r2, r4, r2
ldr r0, [r3]
[31mbl rsym.__GI_fprintf[0m
b 0x49338
mov r0, 0x2c
bl rsym.malloc
subs r5, r0, 0
bne 0x49298
ldr r3, [0x00049344]
mov r7, r5
ldr r1, [0x00049348]
ldr r2, [0x00049350]
ldr r3, [r4, r3]
add r1, r4, r1
add r2, r4, r2
ldr r0, [r3]
[31mbl rsym.__GI_fprintf[0m
b 0x49338
lsl sb, r8, 4
--
add r1, r4, r1
ldr r0, [r3]
b 0x49318
lsl r8, r8, 2
mov r1, r6
mov r2, sb
bl memset
mov r0, r8
bl rsym.malloc
cmp r0, 0
mov r7, r0
str r0, [r5, 8]
bne 0x49324
ldr r3, [0x00049344]
ldr r1, [0x00049348]
ldr r2, [0x00049358]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r0, [r3]
add r2, r4, r2
[31mbl rsym.__GI_fprintf[0m
b 0x49338
mov r7, 1
--
b 0x4c9b8
ldr r4, [0x0004ca0c]
add r4, r6, r4
add r4, r4, 2
bl rsym.__h_errno_location
ldr r3, [r0]
cmp r3, 4
ldrls r2, [0x0004ca10]
addls r2, r6, r2
ldrls r3, [r2, r3, lsl 2]
ldrhi r3, [0x0004ca14]
addhi r3, r6, r3
ldr r2, [0x0004ca18]
ldr r1, [0x0004ca1c]
str r3, [sp]
mov r3, r4
ldr r2, [r6, r2]
add r1, r6, r1
ldr r0, [r2]
mov r2, r5
[31mbl rsym.__GI_fprintf[0m
pop {r2, r3, r4, r5, r6, pc}
andeq r0, r2, ip, asr fp
--
bl rsym.__GI_mallinfo
ldr r1, [sp, 0x2c]
mov r0, r5
ldr r3, [sp, 0x30]
ldr r2, [sp, 0x20]
str r1, [sp, 4]
ldr r1, [sp, 0x34]
ldr ip, [sp, 0x3c]
str r2, [sp]
add r2, r3, r2
str r1, [sp, 0x10]
ldr r1, [sp, 0x40]
str r3, [sp, 8]
add r3, ip, r3
str ip, [sp, 0xc]
str r1, [sp, 0x14]
ldr r1, [sp, 0x44]
str r1, [sp, 0x18]
ldr r1, [0x00054024]
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
add sp, sp, 0x4c
pop {r4, r5, pc}
--
mov r7, fp
mov r4, r8
ldr r5, [sp, 0x2c]
ldr fp, [sp, 0x28]
ldr r8, [sp, 0x24]
rsbs r3, r3, 1
movlo r3, 0
cmp ip, 0
moveq r3, 0
cmp r3, 0
beq 0x58110
cmp r8, 0
beq 0x580e0
ldr r3, [0x00058524]
ldr r1, [0x00058528]
ldr r2, [r5]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r0, [r3]
ldr r3, [sp, 0x14]
[31mbl rsym.__GI_fprintf[0m
ldr r6, [0x00058518]
add r5, r4, r6
--
ldr r1, [r6, 4]
beq 0x581dc
cmp r1, 0
addne r3, r0, 1
strne r3, [r2, 8]
bne 0x58260
cmp r8, 0
beq 0x581b4
ldr r1, [sp, 0x10]
ldr r2, [r5, r1, lsl 2]
ldrb r3, [r2, 1]
cmp r3, 0x2d
ldr r3, [0x00058524]
bne 0x58190
ldr r3, [r4, r3]
ldr r1, [0x0005852c]
ldr r2, [r5]
ldr r0, [r3]
add r1, r4, r1
ldr r3, [r6]
[31mbl rsym.__GI_fprintf[0m
b 0x581b4
ldr r1, [r4, r3]
ldrb r3, [r2]
ldr r2, [r6]
str r2, [sp]
ldr r0, [r1]
ldr r1, [0x00058530]
ldr r2, [r5]
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
ldr r5, [0x00058518]
add r5, r4, r5
--
str r3, [r5, 0xc]
b 0x583f0
cmp r1, 1
bne 0x58260
cmp r3, fp
ldrlt r1, [r5, r3, lsl 2]
addlt r3, r3, 1
strlt r3, [r2]
strlt r1, [r2, 8]
blt 0x58260
cmp r8, 0
beq 0x58228
ldr r3, [0x00058524]
ldr r1, [0x00058534]
ldr ip, [sp, 0x10]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r2, [r5]
ldr r0, [r3]
ldr r3, [r5, ip, lsl 2]
[31mbl rsym.__GI_fprintf[0m
ldr r5, [0x00058518]
add r5, r4, r5
--
ldr r3, [sp, 0x18]
cmp r3, 0x2d
beq 0x582cc
mov r0, r7
ldrb r1, [sb]
bl rsym.__GI_strchr
cmp r0, 0
bne 0x58354
cmp r8, 0
beq 0x58328
ldr ip, [sp, 0x18]
ldr r3, [0x00058524]
cmp ip, 0x2d
bne 0x58304
ldr r3, [r4, r3]
ldr r1, [0x00058538]
ldr r2, [r5]
ldr r0, [r3]
mov r3, sb
add r1, r4, r1
[31mbl rsym.__GI_fprintf[0m
b 0x58328
ldr r2, [r4, r3]
ldr r0, [sp, 0x14]
ldr r1, [0x0005853c]
ldrb r3, [r0]
add r1, r4, r1
str sb, [sp]
ldr r0, [r2]
ldr r2, [r5]
[31mbl rsym.__GI_fprintf[0m
ldr r3, [0x00058518]
ldr r1, [0x00058540]
--
streq r2, [r4, sb]
cmp r6, 0x3a
cmpne r0, 0
bne 0x583f8
cmp r8, 0
beq 0x583e4
ldr r3, [0x00058518]
add r3, r4, r3
ldr r3, [r3, 0x18]
cmp r3, 0
ldr r3, [0x00058524]
ldrne r3, [r4, r3]
ldrne r1, [0x00058544]
ldrne r0, [r3]
ldreq r3, [r4, r3]
ldreq r1, [0x00058548]
ldreq r0, [r3]
add r1, r4, r1
ldr r2, [r5]
mov r3, r6
[31mbl rsym.__GI_fprintf[0m
ldr r3, [0x00058518]
add r3, r4, r3
--
beq 0x58448
add r2, r4, r3
str sl, [r2, 8]
ldr r2, [r4, r3]
b 0x584a8
ldr r2, [r4, r3]
add r1, r4, r3
cmp r2, fp
ldrne r0, [r5, r2, lsl 2]
strne r0, [r1, 8]
bne 0x584a8
cmp r8, 0
beq 0x58488
ldr r3, [0x00058524]
ldr r1, [0x0005854c]
ldr r2, [r5]
ldr r3, [r4, r3]
add r1, r4, r1
ldr r0, [r3]
mov r3, r6
[31mbl rsym.__GI_fprintf[0m
ldr r3, [0x00058518]
add r3, r4, r3

[[0;33m*[0m] Function [0;33mfprintf[0m used [0;33m50[0m times [0;33mlibc.so.0[0m

